p_SR_M_pop_Pasyukova
pdf(file="Starvation/p_SR_M_pop_Pasyukova.pdf", width=8, height=5)
p_SR_M_pop_Pasyukova
dev.off()
intersect_SR  <- Reduce(intersect, list(d_SR$Line[d_SR$Supervisor.PI == "Gonzalez"],
d_SR$Line[d_SR$Supervisor.PI == "Pasyukova"],
d_SR$Line[d_SR$Supervisor.PI == "Onder"]))
length(intersect_SR)
write(intersect_SR, file ="Starvation/SR_int.txt", sep = "\t")
SR_fitted <- combineFitted(labs = rep(c("Gonzalez", "Onder", "Pasyukova"), 2), sex = rep(c("F", "M"), each = 3), models = list(SR_F_lmer_Gonzalez, SR_F_lmer_Onder, SR_F_lmer_Pasyukova, SR_M_lmer_Gonzalez, SR_M_lmer_Onder, SR_M_lmer_Pasyukova))
scatterPlotMatrix(SR_fitted, sex = "F")
scatterPlotMatrix(SR_fitted, sex = "M")
# get the effects in the right shape
SR_effects <- SR_fitted %>%
dplyr::select(-Value) %>%
mutate(Population = factor(Population, levels = c("YE","RE","GI","MU","MA","UM","KA","VA","AK")),
Lab = as.factor(Lab),
V = SE^2,
Study = paste(Population, Lab, sep = "_")) %>%
relocate(Population, Sex, Lab, Study) %>%
arrange(Population) %>%
dplyr::rename(Y = Estimate)
# run the analysis with metagen package
SR_F_metagen <- metagen(data = SR_effects %>% filter(Sex == "F"), TE = Y, seTE = SE, studlab = Study, sm = "SMD", fixed = FALSE, random = TRUE)
SR_F_metagen <- update.meta(SR_F_metagen, subgroup = Population, tau.common = FALSE)
SR_F_metagen
?metagen
# run the analysis with metagen package
SR_F_metagen <- metagen(data = SR_effects %>% filter(Sex == "F"), TE = Y, seTE = SE, studlab = Study, sm = "SMD", fixed = FALSE, random = TRUE, method.tau = "DL")
SR_F_metagen <- update.meta(SR_F_metagen, subgroup = Population, tau.common = FALSE)
SR_F_metagen
summary(SR_F_metagen)
SR_F_metagen
# run the analysis with metagen package
SR_F_metagen <- metagen(data = SR_effects %>% filter(Sex == "F"), TE = Y, seTE = SE, studlab = Study, sm = "SMD", fixed = FALSE, random = TRUE, method.tau = "DL")
SR_F_metagen <- update.meta(SR_F_metagen, subgroup = Population, tau.common = FALSE)
capture.output(summary(SR_F_metagen), file = "Starvation/SR_F_metagen_sum.txt")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '~/Work/UNIFR/Github/DrosEU_PhenotypingWG/') # change this
library(tidyverse)
library(ggpubr)
library(multcompView)
library(multcomp)
#library(hrbrthemes)
#library(rworldmap)
#library(maps)
#library(rnaturalearth)
#library(maptools)
#library(rgeos)
#library(qwraps2)
#library(afex)
#library(Hmisc)
library(lme4)
#library(nlme)
library(emmeans)
library(coxme)
#library(sf)
#library(rnaturalearthdata)
library(cowplot)
#library(googleway)
#library(ggrepel)
#library(ggspatial)
library(DT)
library(data.table)
library(survival)
library(survminer)
library(meta)
library(metafor)
source("lab_correlations_functions.R") # you need to source this to make the lab correlation plot
source("meta_analysis_functions.R")
std_err <- function(x) sd(x)/sqrt(length(x))
coef_var <- function(x) sd(x)/mean(x)
estimate_mode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
droseu_theme <- theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black",),  axis.title.x = element_text(size = 16), axis.text.x = element_text(size = 16),axis.text.y = element_text(size = 16),axis.title.y = element_text(size = 16))
# run the analysis with metagen package
SR_F_metagen <- metagen(data = SR_effects %>% filter(Sex == "F"), TE = Y, seTE = SE, studlab = Study, sm = "SMD", fixed = FALSE, random = TRUE, method.tau = "DL")
SR_F_metagen <- update.meta(SR_F_metagen, subgroup = Population, tau.common = FALSE)
capture.output(summary(SR_F_metagen), file = "Starvation/SR_F_metagen_sum.txt")
SR_F_metagen
# run the analysis with EK's code for quick plotting
SR_F_meta <- metaAnalysisRandomModel(SR_effects %>% filter(Sex == "F"))
p_SR_F_meta_SE <- SR_F_meta$summary_effects_random %>%
dplyr::select(Population, Mstar, SEMstar) %>%
distinct() %>%
ggplot(aes(x = Mstar, y = 1:length(Population), color = Population)) +
theme_bw() +
geom_point(size = 4, shape = 15) +
#scale_color_manual(values = pops$by_lat$Color, guide = "none") +
geom_errorbarh(aes(xmax = Mstar + SEMstar, xmin = Mstar - SEMstar), height = 0) +
scale_y_continuous(name = "Population", breaks = 1:9,
labels = c("YE","RE","GI","MU","MA","UM","KA","VA","AK")) +
labs(x = "Age at death (days)", title = "Pop. summary effect with SE") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
annotate("text", x = -Inf, y = Inf, label = sprintf("italic(Q) == %.4g", SR_F_meta$Qtest_het$Q),
hjust=-0.2, vjust=3.5, parse = T) +
annotate("text", x = -Inf, y = Inf, label = sprintf("italic(p) == %.4g", SR_F_meta$Qtest_het$p),
hjust=-0.2, vjust=5, parse = T) +
theme(legend.position = "none")
p_SR_F_meta_CI <- SR_F_meta$summary_effects_random %>%
dplyr::select(Population, Mstar, ULMstar, LLMstar) %>%
distinct() %>%
ggplot(aes(x = Mstar, y = 1:length(Population), color = Population)) +
theme_bw() +
geom_point(size = 4, shape = 15) +
#scale_color_manual(values = pops$by_lat$Color, guide = "none") +
geom_errorbarh(aes(xmax = ULMstar, xmin = LLMstar), height = 0) +
scale_y_continuous(name = "Population", breaks = 1:9,
labels = c("YE","RE","GI","MU","MA","UM","KA","VA","AK")) +
labs(x = "Age at death (days)", title = "Pop. summary effect with 95% CI") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
annotate("text", x = -Inf, y = Inf, label = sprintf("italic(Q) == %.4g", SR_F_meta$Qtest_het$Q),
hjust=-0.2, vjust=3.5, parse = T) +
annotate("text", x = -Inf, y = Inf, label = sprintf("italic(p) == %.4g", SR_F_meta$Qtest_het$p),
hjust=-0.2, vjust=5, parse = T) +
theme(legend.position = "none")
ggarrange(p_SR_F_meta_SE, p_SR_F_meta_CI)
pdf(file="Starvation/p_SR_F_meta.pdf", width=8, height=5)
ggarrange(p_SR_F_meta_SE, p_SR_F_meta_CI)
dev.off()
# run the analysis with metagen package
SR_M_metagen <- metagen(data = SR_effects %>% filter(Sex == "M"), TE = Y, seTE = SE, studlab = Study, sm = "SMD", fixed = FALSE, random = TRUE, method.tau = "DL")
SR_M_metagen <- update.meta(SR_F_metagen, subgroup = Population, tau.common = FALSE)
capture.output(summary(SR_M_metagen), file = "Starvation/SR_M_metagen_sum.txt")
SR_M_metagen
# run the analysis with metagen package
SR_M_metagen <- metagen(data = SR_effects %>% filter(Sex == "M"), TE = Y, seTE = SE, studlab = Study, sm = "SMD", fixed = FALSE, random = TRUE, method.tau = "DL")
SR_M_metagen <- update.meta(SR_M_metagen, subgroup = Population, tau.common = FALSE)
capture.output(summary(SR_M_metagen), file = "Starvation/SR_M_metagen_sum.txt")
SR_M_metagen
# run the analysis with EK's code for quick plotting
SR_M_meta <- metaAnalysisRandomModel(SR_effects %>% filter(Sex == "M"))
pdf(file="Starvation/p_SR_M_meta.pdf", width=8, height=5)
ggarrange(p_SR_M_meta_SE, p_SR_M_meta_CI)
p_SR_M_meta_SE <- SR_M_meta$summary_effects_random %>%
dplyr::select(Population, Mstar, SEMstar) %>%
distinct() %>%
ggplot(aes(x = Mstar, y = 1:length(Population), color = Population)) +
theme_bw() +
geom_point(size = 4, shape = 15) +
#scale_color_manual(values = pops$by_lat$Color, guide = "none") +
geom_errorbarh(aes(xmax = Mstar + SEMstar, xmin = Mstar - SEMstar), height = 0) +
scale_y_continuous(name = "Population", breaks = 1:9,
labels = c("YE","RE","GI","MU","MA","UM","KA","VA","AK")) +
labs(x = "Age at death (days)", title = "Pop. summary effect with SE") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
annotate("text", x = -Inf, y = Inf, label = sprintf("italic(Q) == %.4g", SR_M_meta$Qtest_het$Q),
hjust=-0.2, vjust=3.5, parse = T) +
annotate("text", x = -Inf, y = Inf, label = sprintf("italic(p) == %.4g", SR_M_meta$Qtest_het$p),
hjust=-0.2, vjust=5, parse = T) +
theme(legend.position = "hours")
p_SR_M_meta_CI <- SR_M_meta$summary_effects_random %>%
dplyr::select(Population, Mstar, ULMstar, LLMstar) %>%
distinct() %>%
ggplot(aes(x = Mstar, y = 1:length(Population), color = Population)) +
theme_bw() +
geom_point(size = 4, shape = 15) +
#scale_color_manual(values = pops$by_lat$Color, guide = "none") +
geom_errorbarh(aes(xmax = ULMstar, xmin = LLMstar), height = 0) +
scale_y_continuous(name = "Population", breaks = 1:9,
labels = c("YE","RE","GI","MU","MA","UM","KA","VA","AK")) +
labs(x = "Age at death (hours)", title = "Pop. summary effect with 95% CI") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
annotate("text", x = -Inf, y = Inf, label = sprintf("italic(Q) == %.4g", SR_M_meta$Qtest_het$Q),
hjust=-0.2, vjust=3.5, parse = T) +
annotate("text", x = -Inf, y = Inf, label = sprintf("italic(p) == %.4g", SR_M_meta$Qtest_het$p),
hjust=-0.2, vjust=5, parse = T) +
theme(legend.position = "none")
ggarrange(p_SR_M_meta_SE, p_SR_M_meta_CI)
pdf(file="Starvation/p_SR_M_meta.pdf", width=8, height=5)
ggarrange(p_SR_M_meta_SE, p_SR_M_meta_CI)
dev.off()
matrix(c(28,44,28), c(25,50,25))
matrix(c(28,44,28), c(25,50,25), ncol = 2)
matrix(c(28,44,28, 25,50,25), ncol = 2)
chisq.test(matrix(c(28,44,28, 25,50,25), ncol = 2))
chisq.test(matrix(c(28,44,28, 25,50,25), ncol = 3, byrow = T))
matrix(c(28, 44, 28, 25, 50, 25), ncol = 3, byrow = T)
?chisq.test
chisq.test(c(28,44,28), c(25,50,25))
0.15/4*10âˆ’8
0.15/4*10^-8
2*(0.15/4*10^-8)
0.15/(4*10^-8)
10^-3
x <- as.matrix(iris[1:50, 1:4])
y <- as.matrix(iris[51:100, 1:4])
res<-dcor(x, y)
##### clean workspace
rm(list = ls())
##### libraries
library(tidyverse)
#library(lme4)
#library(lsmeans)
#library(afex)
#library(multcomp)
##### set working directory
setwd("~/Work/UNIFR/GitHub/DrosEU_PhenotypingWG/")
##### source functions
#source("Functions/lab_correlations_functions.R")
##### load data
droseu <- readRDS("Data/droseu_master_list_2022-05-02.rds")
##### create output directory
#desc_dir <- "DescriptiveStatistics"
#dir.create(desc_dir, showWarnings = F)
head(droseu$wa)
group_by(Supervisor.PI, Line, ReplicateVial) %>%
summarise(WAL = mean(CentroidSizeLeft_micrometers))
group_by(droseu$wa, Supervisor.PI, Line, ReplicateVial) %>%
summarise(WAL = mean(CentroidSizeLeft_micrometers))
dim(droseu$wa)
wal <- group_by(droseu$wa, Supervisor.PI, Line, ReplicateVial) %>%
summarise(WAL = mean(CentroidSizeLeft_micrometers))
head(wal)
library(lmer)
library(lme4)
lmm <- lmer(WAL ~ 1, ~ 1|Line, data = wal)
lmm <- lmer(WAL ~ 1 + 1|Line, data = wal)
lmm
theta_lmm <- as.numeric(VarCorr(lmm)[1:2])
as_tibble(summary(lmm)$varcor)
Vg <- lmm.varcor$vcov[1]
Ve <- lmm.varcor$vcov[2]
Vp <- Vg + Ve
H2 <- Vg/Vp
lmm <- lmer(WAL ~ 1 + 1|Line, data = wal)
lmm.varcor <- as_tibble(summary(lmm)$varcor)
Vg <- lmm.varcor$vcov[1]
Ve <- lmm.varcor$vcov[2]
Vp <- Vg + Ve
H2 <- Vg/Vp
H2
summary(lmm)
H2 <- function(genot, phenot, data) {
lmm <- lmer(phenot ~ 1 + 1|genot, data = data)
lmm.varcor <- as.data.frame(summary(lmm)$varcor)
Vg <- lmm.varcor$vcov[1]
Ve <- lmm.varcor$vcov[2]
Vp <- Vg + Ve
H2 <- Vg/Vp
H2
}
H2 <- function(genot, phenot, data) {
lmm <- lmer(phenot ~ 1 + 1|genot, data = data)
lmm.varcor <- as.data.frame(summary(lmm)$varcor)
Vg <- lmm.varcor$vcov[1]
Ve <- lmm.varcor$vcov[2]
Vp <- Vg + Ve
H2 <- Vg/Vp
H2
}
H2("Line", "WAL", wal)
h2_wal <- H2(Line, WAL, wal)
genot = "Line"
phenot = "WAL"
as.formula(phenot ~ genot + 1|genot)
H2 <- function(genot, phenot, data) {
lmm <- lmer(as.formula(phenot ~ genot + 1|genot), data = data)
lmm.varcor <- as.data.frame(summary(lmm)$varcor)
Vg <- lmm.varcor$vcov[1]
Ve <- lmm.varcor$vcov[2]
Vp <- Vg + Ve
H2 <- Vg/Vp
H2
}
H2(Line, WAL, wal)
h2_wal <- H2("Line", "WAL", wal)
phenot = "WAL"
genot = "Line"
phenot
genot
lmer(as.formula(phenot ~ 1 + 1|genot), data = data)
H2 <- function(genot, phenot, data) {
lmm <- lmer(as.formula(phenot ~ 1 + 1|genot), data = data)
lmm.varcor <- as.data.frame(summary(lmm)$varcor)
Vg <- lmm.varcor$vcov[1]
Ve <- lmm.varcor$vcov[2]
Vp <- Vg + Ve
H2 <- Vg/Vp
H2
}
h2_wal <- H2("Line", "WAL", wal)
data = wal
lmer(as.formula(phenot ~ 1 + 1|genot), data = data)
as.formula(phenot ~ 1 + 1|genot)
paste0(phenot, "~ 1 + 1|", genot)
as.formula(paste0(phenot, "~1 + 1|", genot))
H2 <- function(genot, phenot, data) {
lmm <- lmer(as.formula(paste0(phenot, "~1 + 1|", genot)), data = data)
lmm.varcor <- as.data.frame(summary(lmm)$varcor)
Vg <- lmm.varcor$vcov[1]
Ve <- lmm.varcor$vcov[2]
Vp <- Vg + Ve
H2 <- Vg/Vp
H2
}
h2_wal <- H2("Line", "WAL", wal)
h2_wal
wal <- group_by(droseu$wa, Supervisor.PI, Line, ReplicateVial) %>%
summarise(WAL = mean(CentroidSizeLeft_micrometers), WAR = mean(CentroidSizeRight_micrometers))
wa <- group_by(droseu$wa, Supervisor.PI, Line, ReplicateVial) %>%
summarise(WAL = mean(CentroidSizeLeft_micrometers), WAR = mean(CentroidSizeRight_micrometers))
H2("Line", "WAL", wa)
H2("Line", "WAR", wa)
h2_wal <- H2("Line", "WAL", wa)
h2_war <- H2("Line", "WAR", wa)
wa_pi <- split(wa, f = wa$Supervisor.PI)
lapply(wa_pi, H2, "Line", "WAL", wa)
lapply(wa_pi, head)
lapply(wa_pi, head, 10)
h2_wal_pi <- lapply(wa_pi, H2, "Line", "WAL")
H2 <- function(data, phenot, genot) {
lmm <- lmer(as.formula(paste0(phenot, "~1 + 1|", genot)), data = data)
lmm.varcor <- as.data.frame(summary(lmm)$varcor)
Vg <- lmm.varcor$vcov[1]
Ve <- lmm.varcor$vcov[2]
Vp <- Vg + Ve
H2 <- Vg/Vp
H2
}
H2 <- function(data, phenot, genot) {
lmm <- lmer(as.formula(paste0(phenot, "~1 + 1|", genot)), data = data)
lmm.varcor <- as.data.frame(summary(lmm)$varcor)
Vg <- lmm.varcor$vcov[1]
Ve <- lmm.varcor$vcov[2]
Vp <- Vg + Ve
H2 <- Vg/Vp
H2
}
#####
wa <- group_by(droseu$wa, Supervisor.PI, Line, ReplicateVial) %>%
summarise(WAL = mean(CentroidSizeLeft_micrometers), WAR = mean(CentroidSizeRight_micrometers))
h2_wal <- H2(wa, "WAL", "Line")
h2_war <- H2(wa, "WAR", "Line")
h2_wal
h2_war
wa_pi <- split(wa, f = wa$Supervisor.PI)
lapply(wa_pi, H2, "Line", "WAL")
h2_wal_pi <- lapply(wa_pi[1:2], H2, "Line", "WAL")
h2_wal_pi <- lapply(wa_pi[2:3], H2, "Line", "WAL")
H2(wa_pi[[1]], "Line", "WAL")
wa_pi[[1]]
h2_wal_pi <- lapply(wa_pi, H2, "WAL", "Line")
H2(wa_pi[[1]], "WAL", "Line")
H2(wa_pi[[2]], "WAL", "Line")
H2(wa_pi[[3]], "WAL", "Line")
H2(wa_pi[[4]], "WAL", "Line")
H2(wa_pi[[5]], "WAL", "Line")
wa_pi[[5]]
length(wa_pi)
data[,genot]
H2 <- function(data, phenot, genot) {
if(unique(data[,genot] == nrow(data))){
H2 <- "NA"
} else {
lmm <- lmer(as.formula(paste0(phenot, "~1 + 1|", genot)), data = data)
lmm.varcor <- as.data.frame(summary(lmm)$varcor)
Vg <- lmm.varcor$vcov[1]
Ve <- lmm.varcor$vcov[2]
Vp <- Vg + Ve
H2 <- Vg/Vp
H2
}
}
h2_wal_pi <- lapply(wa_pi, H2, "WAL", "Line")
unique(wa_pi[[1]][,genot] == nrow(wa_pi[[1]]))
H2 <- function(data, phenot, genot) {
if(unique(data[,genot]) == nrow(data)){
H2 <- "NA"
} else {
lmm <- lmer(as.formula(paste0(phenot, "~1 + 1|", genot)), data = data)
lmm.varcor <- as.data.frame(summary(lmm)$varcor)
Vg <- lmm.varcor$vcov[1]
Ve <- lmm.varcor$vcov[2]
Vp <- Vg + Ve
H2 <- Vg/Vp
H2
}
}
h2_wal_pi <- lapply(wa_pi, H2, "WAL", "Line")
H2 <- function(data, phenot, genot) {
if(length(unique(data[,genot])) == nrow(data)){
H2 <- "NA"
} else {
lmm <- lmer(as.formula(paste0(phenot, "~1 + 1|", genot)), data = data)
lmm.varcor <- as.data.frame(summary(lmm)$varcor)
Vg <- lmm.varcor$vcov[1]
Ve <- lmm.varcor$vcov[2]
Vp <- Vg + Ve
H2 <- Vg/Vp
H2
}
}
wa_pi <- split(wa, f = wa$Supervisor.PI)
h2_wal_pi <- lapply(wa_pi, H2, "WAL", "Line")
h2_wal_pi
wa_pi[[1]]
length(unique(wa_pi[[1]][,genot])) == nrow(wa_pi[[1]])
length(unique(wa_pi[[1]][,genot]))
unique(wa_pi[[1]][,genot])
unique(wa_pi[[1]][,genot]) %>% unlist
unique(wa_pi[[1]][,genot]) %>% unlist %>% length()
H2 <- function(data, phenot, genot) {
if(length(unlist(unique(data[,genot]))) == nrow(data)){
H2 <- "NA"
} else {
lmm <- lmer(as.formula(paste0(phenot, "~1 + 1|", genot)), data = data)
lmm.varcor <- as.data.frame(summary(lmm)$varcor)
Vg <- lmm.varcor$vcov[1]
Ve <- lmm.varcor$vcov[2]
Vp <- Vg + Ve
H2 <- Vg/Vp
H2
}
}
h2_wal_pi <- lapply(wa_pi, H2, "WAL", "Line")
h2_wal_pi
h2_war_pi <- lapply(wa_pi, H2, "WAR", "Line")
h2_war_pi
head(droseu$via)
via <- group_by(droseu$via, Supervisor.PI, Line, ReplicateVial) %>%
summarise(via = mean(ProportionEggtoAdultSurvival)
via
via <- group_by(droseu$via, Supervisor.PI, Line, ReplicateVial) %>%
summarise(via = mean(ProportionEggtoAdultSurvival))
via
h2_via <- H2(wa, "via", "Line")
h2_via <- H2(via, "via", "Line")
h2_via
via_pi <- split(via, f = via$Supervisor.PI)
h2_wal_pi <- lapply(via_pi, H2, "via", "Line")
h2_wal_pi
str(lmm)
str(summary(lmm))
lmm.varcor
############################################################
###################### HERITABILITIES ######################
############################################################
##### clean workspace
rm(list = ls())
##### libraries
library(tidyverse)
library(lme4)
#library(lsmeans)
#library(afex)
#library(multcomp)
##### set working directory
setwd("~/Work/UNIFR/GitHub/DrosEU_PhenotypingWG/")
##### source functions
#source("Functions/lab_correlations_functions.R")
##### load data
droseu <- readRDS("Data/droseu_master_list_2022-05-02.rds")
##### create output directory
#desc_dir <- "DescriptiveStatistics"
#dir.create(desc_dir, showWarnings = F)
##### functions
H2_lmm <- function(data, phenot, genot) {
if(length(unlist(unique(data[,genot]))) == nrow(data)){
H2 <- "NA"
} else {
lmm <- lmer(as.formula(paste0(phenot, "~1 + 1|", genot)), data = data)
lmm.varcor <- as.data.frame(summary(lmm)$varcor)
Vg <- lmm.varcor$vcov[1]
Ve <- lmm.varcor$vcov[2]
Vp <- Vg + Ve
H2 <- Vg/Vp
H2
}
}
#####
via <- group_by(droseu$via, Supervisor.PI, Line, ReplicateVial) %>%
summarise(via = mean(ProportionEggtoAdultSurvival))
h2_via <- H2_lmm(via, "via", "Line")
via_pi <- split(via, f = via$Supervisor.PI)
h2_wal_pi <- lapply(via_pi, H2_lmm, "via", "Line")
#####
wa <- group_by(droseu$wa, Supervisor.PI, Line, ReplicateVial) %>%
summarise(WAL = mean(CentroidSizeLeft_micrometers), WAR = mean(CentroidSizeRight_micrometers))
h2_wal <- H2_lmm(wa, "WAL", "Line")
h2_war <- H2_lmm(wa, "WAR", "Line")
wa_pi <- split(wa, f = wa$Supervisor.PI)
h2_wal_pi <- lapply(wa_pi, H2_lmm, "WAL", "Line")
h2_war_pi <- lapply(wa_pi, H2_lmm, "WAR", "Line")
?summarise
group_by(wa, Line) %>% summarise(Var = var(WAL))
group_by(wa, Line) %>% summarise(Var = var(WAL)) %>% unlist(Var)
group_by(wa, Line) %>% summarise(Var = var(WAL)) %>% select(Var) %>% unlist()
Ve <- sum(Ve) / length(Ve)
Ve <- group_by(wa, Line) %>% summarise(Var = var(WAL)) %>% select(Var) %>% unlist()
Ve <- sum(Ve) / length(Ve)
Ve
sum(Ve)
Ve <- group_by(wa, Line) %>% summarise(Var = var(WAL)) %>% select(Var) %>% unlist()
Ve <- sum(Ve, na.rm = T) / length(Ve)
Ve
Vp <- var(wa$WAL)
Vp
Vg <- Vp - Ve
Vg / (Vp)
h2_wal_pi
h2_via
h2_wal
h2_wal
h2_wal_pi <- lapply(wa_pi, H2_lmm, "WAL", "Line")
h2_war_pi <- lapply(wa_pi, H2_lmm, "WAR", "Line")
h2_wal_pi
