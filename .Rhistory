library(emmeans)
library(coxme)
#library(sf)
#library(rnaturalearthdata)
library(cowplot)
#library(googleway)
#library(ggrepel)
#library(ggspatial)
library(DT)
library(data.table)
library(survival)
library(survminer)
library(meta)
library(metafor)
source("lab_correlations_functions.R") # you need to source this to make the lab correlation plot
source("meta_analysis_functions.R")
std_err <- function(x) sd(x)/sqrt(length(x))
coef_var <- function(x) sd(x)/mean(x)
estimate_mode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
droseu_theme <- theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black",),  axis.title.x = element_text(size = 16), axis.text.x = element_text(size = 16),axis.text.y = element_text(size = 16),axis.title.y = element_text(size = 16))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '~/Work/UNIFR/Github/DrosEU_PhenotypingWG/') # change this
library(tidyverse)
library(ggpubr)
library(multcompView)
library(multcomp)
#library(hrbrthemes)
#library(rworldmap)
#library(maps)
#library(rnaturalearth)
#library(maptools)
#library(rgeos)
#library(qwraps2)
#library(afex)
#library(Hmisc)
library(lme4)
#library(nlme)
library(emmeans)
library(coxme)
#library(sf)
#library(rnaturalearthdata)
library(cowplot)
#library(googleway)
#library(ggrepel)
#library(ggspatial)
library(DT)
library(data.table)
library(survival)
library(survminer)
library(meta)
library(metafor)
source("lab_correlations_functions.R") # you need to source this to make the lab correlation plot
source("meta_analysis_functions.R")
std_err <- function(x) sd(x)/sqrt(length(x))
coef_var <- function(x) sd(x)/mean(x)
estimate_mode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
droseu_theme <- theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black",),  axis.title.x = element_text(size = 16), axis.text.x = element_text(size = 16),axis.text.y = element_text(size = 16),axis.title.y = element_text(size = 16))
d_SR <- read.csv("MasterSheets_Oct21_git/SR_MasterSheet_Nov21.csv")
str(d_SR)
d_SR <- d_SR %>%
mutate(Supervisor.PI = as.factor(Supervisor.PI),
Diet = as.factor(Diet),
Batch = as.factor(Batch),
Population_Lat = factor(Population, levels= c("YE","RE","GI","MU","MA","UM","KA","VA","AK")),
Population_Lon = factor(Population, levels= c("RE","GI","KA","MU","MA","AK","UM","YE","VA")),
Population_Alt = factor(Population, levels= c("KA","AK","GI","RE","UM","VA","MU","MA","YE")),
Line = as.factor(Line),
Sex = as.factor(Sex),
ReplicateVial = as.factor(ReplicateVial),
AgeAtDeath_hours = as.numeric(AgeAtDeath_hours))
str(d_SR)
d_SR_F <-subset(d_SR,Sex=='F')
d_SR_M <-subset(d_SR,Sex=='M')
table_SR_Line_wbatch <- d_SR %>% group_by(Supervisor.PI, Batch, Sex, Population, Line) %>%
summarise_at(vars(AgeAtDeath_hours), list(Mean = mean, SD= sd, Median = median, Min = min, Max = max,SE = std_err, CV = coef_var, Mode = estimate_mode))
write.csv(table_SR_Line_wbatch, file = "Starvation/table_SR_Line_wbatch.csv", row.names = T)
DT::datatable(table_SR_Line_wbatch, options = list(pageLength = 10)) %>% formatRound(7:14, 3)
table_SR_Line_wobatch <- d_SR %>% group_by(Supervisor.PI, Sex, Population, Line) %>%
summarise_at(vars(AgeAtDeath_hours), list(Mean = mean, SD= sd, Median = median, Min = min, Max = max, SE = std_err, CV = coef_var, Mode = estimate_mode))
write.csv(table_SR_Line_wobatch, file = "Starvation/table_SR_Line_wobatch.csv", row.names = T)
DT::datatable(table_SR_Line_wobatch, options = list(pageLength = 10)) %>% formatRound(6:13, 3)
table_SR_Pop_wbatch <- d_SR %>% group_by(Supervisor.PI, Batch, Sex, Population) %>%
summarise_at(vars(AgeAtDeath_hours), list(Mean = mean, SD= sd, Median = median, Min = min, Max = max, SE = std_err, CV = coef_var, Mode = estimate_mode))
write.csv(table_SR_Pop_wbatch, file = "Starvation/table_SR_Pop_wbatch.csv", row.names = T)
DT::datatable(table_SR_Pop_wbatch, options = list(pageLength = 10)) %>% formatRound(6:13, 3)
table_SR_Pop_wobatch <- d_SR %>% group_by(Supervisor.PI, Sex, Population) %>%
summarise_at(vars(AgeAtDeath_hours), list(Mean = mean, SD= sd, Median = median, Min = min, Max = max, SE = std_err, CV = coef_var, Mode = estimate_mode))
write.csv(table_SR_Pop_wobatch, file = "Starvation/table_SR_Pop_wobatch.csv", row.names = T)
DT::datatable(table_SR_Pop_wobatch, options = list(pageLength = 10)) %>% formatRound(5:12, 3)
min_SR <- min(d_SR$AgeAtDeath_hours)
max_SR <- max(d_SR$AgeAtDeath_hours)
p_SR_F <- ggplot(data = d_SR_F, aes(x=Population_Lat, y=AgeAtDeath_hours, fill=Supervisor.PI)) +
geom_boxplot(outlier.shape = NA, notch=FALSE) +  #geom_jitter(width=0.2,alpha=0.05) +
labs(title="p_SR_F", x="Population", y = "AgeAtDeath_hours") +
coord_cartesian(ylim = c(min_SR, max_SR)) + droseu_theme
p_SR_F
pdf(file="Starvation/p_SR_F.pdf",width=8, height=5)
p_SR_F
dev.off()
p_SR_M <- ggplot(data = d_SR_M, aes(x=Population_Lat, y=AgeAtDeath_hours, fill=Supervisor.PI)) +
geom_boxplot(outlier.shape = NA, notch=FALSE) +  #geom_jitter(width=0.2,alpha=0.05) +
labs(title="p_SR_M", x="Population", y = "AgeAtDeath_hours") +
coord_cartesian(ylim = c(min_SR, max_SR)) + droseu_theme
p_SR_M
pdf(file="Starvation/p_SR_M.pdf",width=8, height=5)
p_SR_M
dev.off()
SR_F_lmer_Gonzalez <- lmer(AgeAtDeath_hours ~ -1 + Population + (1|Line:Population) + (1|Batch) + (1|ReplicateVial:Line:Population), data = d_SR_F %>% filter(Supervisor.PI=='Gonzalez'))
capture.output(summary(SR_F_lmer_Gonzalez), file = "Starvation/SR_F_lmer_Gonzalez_sum.txt")
capture.output(anova(SR_F_lmer_Gonzalez), file = "Starvation/SR_F_lmer_Gonzalez.txt")
#capture.output(emmeans(SR_F_lmer_Gonzalez, list(pairwise ~ Population), adjust = "tukey"),file = "SR_F_Gonzalez_tk.txt")
SR_F_means_Gonzalez <- emmeans(object = SR_F_lmer_Gonzalez, specs = ~ Population)
SR_F_cld_Gonzalez <- cld(object = SR_F_means_Gonzalez, Letters = letters, alpha = 0.05) %>%
as.data.frame %>%
mutate(Population = factor(Population, levels = c("YE","RE","GI","MU","MA","UM","KA","VA","AK"))) %>%
arrange(Population) %>% dplyr::rename(cld = .group)
p_SR_F_Gonzalez <- d_SR_F %>%
filter(Supervisor.PI=='Gonzalez')%>%
ggplot(aes(x = Population_Lat, y = AgeAtDeath_hours, fill = Batch)) +
geom_boxplot(outlier.shape = NA, notch=FALSE) +  geom_jitter(width=0.2, alpha=0.05) +
labs(title="p_SR_F_Gonzalez", x="Population", y = "AgeAtDeath_hours") +
coord_cartesian(ylim = c(0, 210))+ droseu_theme
p_SR_F_Gonzalez
pdf(file="Starvation/p_SR_F_Gonzalez.pdf", width=8, height=5)
p_SR_F_Gonzalez
dev.off()
p_SR_F_pop_Gonzalez <- d_SR_F %>%
filter(Supervisor.PI=='Gonzalez')%>%
ggplot(aes(x = Population_Lat, y = AgeAtDeath_hours, fill = Population)) +
geom_boxplot(outlier.shape = NA, notch=FALSE) +  geom_jitter(width=0.2, alpha=0.05) +
labs(title="p_SR_F_Gonzalez", x="Population", y = "AgeAtDeath_hours") +
geom_text(data = SR_F_cld_Gonzalez, aes(x = Population, label = cld), y = 200) +
coord_cartesian(ylim = c(0, 210)) + droseu_theme
p_SR_F_pop_Gonzalez
pdf(file="Starvation/p_SR_F_pop_Gonzalez.pdf", width=8, height=5)
p_SR_F_pop_Gonzalez
dev.off()
SR_M_lmer_Gonzalez <- lmer(AgeAtDeath_hours ~ -1 + Population + (1|Line:Population) + (1|Batch) + (1|ReplicateVial:Line:Population), data = d_SR_M %>% filter(Supervisor.PI=='Gonzalez'))
capture.output(summary(SR_M_lmer_Gonzalez), file = "Starvation/SR_M_lmer_Gonzalez_sum.txt")
capture.output(anova(SR_M_lmer_Gonzalez), file = "Starvation/SR_M_lmer_Gonzalez.txt")
#capture.output(emmeans(SR_F_lmer_Gonzalez, list(pairwise ~ Population), adjust = "tukey"),file = "SR_F_Gonzalez_tk.txt")
SR_M_means_Gonzalez <- emmeans(object = SR_M_lmer_Gonzalez, specs = ~ Population)
SR_M_cld_Gonzalez <- cld(object = SR_M_means_Gonzalez, Letters = letters, alpha = 0.05) %>%
as.data.frame %>%
mutate(Population = factor(Population, levels = c("YE","RE","GI","MU","MA","UM","KA","VA","AK"))) %>%
arrange(Population) %>% dplyr::rename(cld = .group)
p_SR_M_Gonzalez <- d_SR_M %>%
filter(Supervisor.PI=='Gonzalez')%>%
ggplot(aes(x = Population_Lat, y = AgeAtDeath_hours, fill = Batch)) +
geom_boxplot(outlier.shape = NA, notch=FALSE) +  geom_jitter(width=0.2,alpha=0.05) +
labs(title="p_SR_M_Gonzalez", x="Population", y = "AgeAtDeath_hours") +
coord_cartesian(ylim = c(0, 210))+ droseu_theme
p_SR_M_Gonzalez
pdf(file="Starvation/p_SR_M_Gonzalez.pdf", width=8, height=5)
p_SR_M_Gonzalez
dev.off()
p_SR_M_pop_Gonzalez <- d_SR_M %>%
filter(Supervisor.PI=='Gonzalez')%>%
ggplot(aes(x = Population_Lat, y = AgeAtDeath_hours, fill = Population)) +
geom_boxplot(outlier.shape = NA, notch=FALSE) +  geom_jitter(width=0.2,alpha=0.05) +
labs(title="p_SR_M_Gonzalez", x="Population", y = "AgeAtDeath_hours") +
geom_text(data = SR_M_cld_Gonzalez, aes(x = Population, label = cld), y = 200) +
coord_cartesian(ylim = c(0, 210))+ droseu_theme
p_SR_M_pop_Gonzalez
pdf(file="Starvation/p_SR_M_pop_Gonzalez.pdf", width=8, height=5)
p_SR_M_pop_Gonzalez
dev.off()
SR_F_lmer_Onder <- lmer(AgeAtDeath_hours ~ -1 + Population + (1|Line:Population) + (1|Batch) + (1|ReplicateVial:Line:Population), data = d_SR_F %>% filter(Supervisor.PI=='Onder'))
capture.output(summary(SR_F_lmer_Onder), file = "Starvation/SR_F_lmer_Onder_sum.txt")
capture.output(anova(SR_F_lmer_Onder), file = "Starvation/SR_F_lmer_Onder.txt")
#capture.output(emmeans(SR_F_lmer_Onder, list(pairwise ~ Population), adjust = "tukey"),file = "SR_F_Onder_tk.txt")
SR_F_means_Onder <- emmeans(object = SR_F_lmer_Onder, specs = ~ Population)
SR_F_cld_Onder <- cld(object = SR_F_means_Onder, Letters = letters, alpha = 0.05) %>%
as.data.frame %>%
mutate(Population = factor(Population, levels = c("YE","RE","GI","MU","MA","UM","KA","VA","AK"))) %>%
arrange(Population) %>% dplyr::rename(cld = .group)
p_SR_F_Onder <- d_SR_F %>%
filter(Supervisor.PI=='Onder')%>%
ggplot(aes(x = Population_Lat, y = AgeAtDeath_hours, fill = Batch)) +
geom_boxplot(outlier.shape = NA, notch=FALSE) +  geom_jitter(width=0.2,alpha=0.05) +
labs(title="p_SR_F_Onder", x="Population", y = "AgeAtDeath_hours") +
coord_cartesian(ylim = c(0, 210))+ droseu_theme
p_SR_F_Onder
pdf(file="Starvation/p_SR_F_Onder.pdf", width=8, height=5)
p_SR_F_Onder
dev.off()
p_SR_F_pop_Onder <- d_SR_F %>%
filter(Supervisor.PI=='Onder')%>%
ggplot(aes(x = Population_Lat, y = AgeAtDeath_hours, fill = Population)) +
geom_boxplot(outlier.shape = NA, notch=FALSE) +  geom_jitter(width=0.2,alpha=0.05) +
labs(title="p_SR_F_Onder", x="Population", y = "AgeAtDeath_hours") +
geom_text(data = SR_F_cld_Onder, aes(x = Population, label = cld), y = 200) +
coord_cartesian(ylim = c(0, 210)) + droseu_theme
p_SR_F_pop_Onder
pdf(file="Starvation/p_SR_F_pop_Onder.pdf", width=8, height=5)
p_SR_F_pop_Onder
dev.off()
SR_M_lmer_Onder <- lmer(AgeAtDeath_hours ~ -1 + Population + (1|Line:Population) + (1|Batch) + (1|ReplicateVial:Line:Population), data = d_SR_M %>% filter(Supervisor.PI=='Onder'))
capture.output(summary(SR_M_lmer_Onder), file = "Starvation/SR_M_lmer_Onder_sum.txt")
capture.output(anova(SR_M_lmer_Onder), file = "Starvation/SR_M_lmer_Onder.txt")
#capture.output(emmeans(SR_F_lmer_Onder, list(pairwise ~ Population), adjust = "tukey"),file = "SR_F_Onder_tk.txt")
SR_M_means_Onder <- emmeans(object = SR_M_lmer_Onder, specs = ~ Population)
SR_M_cld_Onder <- cld(object = SR_M_means_Onder, Letters = letters, alpha = 0.05) %>%
as.data.frame %>%
mutate(Population = factor(Population, levels = c("YE","RE","GI","MU","MA","UM","KA","VA","AK"))) %>%
arrange(Population) %>% dplyr::rename(cld = .group)
p_SR_M_Onder <- d_SR_M %>%
filter(Supervisor.PI=='Onder')%>%
ggplot(aes(x = Population_Lat, y = AgeAtDeath_hours, fill = Batch)) +
geom_boxplot(outlier.shape = NA, notch=FALSE) +  geom_jitter(width=0.2,alpha=0.05) +
labs(title="p_SR_M_Onder", x="Population", y = "AgeAtDeath_hours") +
coord_cartesian(ylim = c(0, 210))+ droseu_theme
p_SR_M_Onder
pdf(file="Starvation/p_SR_M_Onder.pdf", width=8, height=5)
p_SR_M_Onder
dev.off()
p_SR_M_pop_Onder <- d_SR_M %>%
filter(Supervisor.PI=='Onder')%>%
ggplot(aes(x = Population_Lat, y = AgeAtDeath_hours, fill = Population)) +
geom_boxplot(outlier.shape = NA, notch=FALSE) +  geom_jitter(width=0.2,alpha=0.05) +
labs(title="p_SR_M_Onder", x="Population", y = "AgeAtDeath_hours") +
geom_text(data = SR_M_cld_Onder, aes(x = Population, label = cld), y = 200) +
coord_cartesian(ylim = c(0, 210))+ droseu_theme
p_SR_M_pop_Onder
pdf(file="Starvation/p_SR_M_pop_Onder.pdf", width=8, height=5)
p_SR_M_pop_Onder
dev.off()
SR_F_lmer_Pasyukova <- lmer(AgeAtDeath_hours ~ -1 + Population + (1|Line:Population) + (1|Batch) + (1|ReplicateVial:Line:Population), data = d_SR_F %>% filter(Supervisor.PI=='Pasyukova'))
capture.output(summary(SR_F_lmer_Pasyukova), file = "Starvation/SR_F_lmer_Pasyukova_sum.txt")
capture.output(anova(SR_F_lmer_Pasyukova), file = "Starvation/SR_F_lmer_Pasyukova.txt")
#capture.output(emmeans(SR_F_lmer_Pasyukova, list(pairwise ~ Population), adjust = "tukey"),file = "SR_F_Pasyukova_tk.txt")
SR_F_means_Pasyukova <- emmeans(object = SR_F_lmer_Pasyukova, specs = ~ Population)
SR_F_cld_Pasyukova <- cld(object = SR_F_means_Pasyukova, Letters = letters, alpha = 0.05) %>%
as.data.frame %>%
mutate(Population = factor(Population, levels = c("YE","RE","GI","MU","MA","UM","KA","VA","AK"))) %>%
arrange(Population) %>% dplyr::rename(cld = .group)
p_SR_F_Pasyukova <- d_SR_F %>%
filter(Supervisor.PI=='Pasyukova')%>%
ggplot(aes(x = Population_Lat, y = AgeAtDeath_hours, fill = Batch)) +
geom_boxplot(outlier.shape = NA, notch=FALSE) +  geom_jitter(width=0.2,alpha=0.05) +
labs(title="p_SR_F_Pasyukova", x="Population", y = "AgeAtDeath_hours") +
coord_cartesian(ylim = c(0, 210))+ droseu_theme
p_SR_F_Pasyukova
pdf(file="Starvation/p_SR_F_Pasyukova.pdf", width=8, height=5)
p_SR_F_Pasyukova
dev.off()
p_SR_F_pop_Pasyukova <- d_SR_F %>%
filter(Supervisor.PI=='Pasyukova')%>%
ggplot(aes(x = Population_Lat, y = AgeAtDeath_hours, fill = Population)) +
geom_boxplot(outlier.shape = NA, notch=FALSE) +  geom_jitter(width=0.2,alpha=0.05) +
labs(title="p_SR_F_Pasyukova", x="Population", y = "AgeAtDeath_hours") +
geom_text(data = SR_F_cld_Pasyukova, aes(x = Population, label = cld), y = 200) +
coord_cartesian(ylim = c(0, 210)) + droseu_theme
p_SR_F_pop_Pasyukova
pdf(file="Starvation/p_SR_F_pop_Pasyukova.pdf", width=8, height=5)
p_SR_F_pop_Pasyukova
dev.off()
SR_M_lmer_Pasyukova <- lmer(AgeAtDeath_hours ~ -1 + Population + (1|Line:Population) + (1|Batch) + (1|ReplicateVial:Line:Population), data = d_SR_M %>% filter(Supervisor.PI=='Pasyukova'))
capture.output(summary(SR_M_lmer_Pasyukova), file = "Starvation/SR_M_lmer_Pasyukova_sum.txt")
capture.output(anova(SR_M_lmer_Pasyukova), file = "Starvation/SR_M_lmer_Pasyukova.txt")
#capture.output(emmeans(SR_F_lmer_Pasyukova, list(pairwise ~ Population), adjust = "tukey"),file = "SR_F_Pasyukova_tk.txt")
SR_M_means_Pasyukova <- emmeans(object = SR_M_lmer_Pasyukova, specs = ~ Population)
SR_M_cld_Pasyukova <- cld(object = SR_M_means_Pasyukova, Letters = letters, alpha = 0.05) %>%
as.data.frame %>%
mutate(Population = factor(Population, levels = c("YE","RE","GI","MU","MA","UM","KA","VA","AK"))) %>%
arrange(Population) %>% dplyr::rename(cld = .group)
p_SR_M_Pasyukova <- d_SR_M %>%
filter(Supervisor.PI=='Pasyukova')%>%
ggplot(aes(x = Population_Lat, y = AgeAtDeath_hours, fill = Batch)) +
geom_boxplot(outlier.shape = NA, notch=FALSE) +  geom_jitter(width=0.2,alpha=0.05) +
labs(title="p_SR_M_Pasyukova", x="Population", y = "AgeAtDeath_hours") +
coord_cartesian(ylim = c(0, 210))+ droseu_theme
p_SR_M_Pasyukova
pdf(file="Starvation/p_SR_M_Pasyukova.pdf", width=8, height=5)
p_SR_M_Pasyukova
dev.off()
p_SR_M_pop_Pasyukova <- d_SR_M %>%
filter(Supervisor.PI=='Pasyukova')%>%
ggplot(aes(x = Population_Lat, y = AgeAtDeath_hours, fill = Population)) +
geom_boxplot(outlier.shape = NA, notch=FALSE) +  geom_jitter(width=0.2,alpha=0.05) +
labs(title="p_SR_M_Pasyukova", x="Population", y = "AgeAtDeath_hours") +
geom_text(data = SR_M_cld_Pasyukova, aes(x = Population, label = cld), y = 200) +
coord_cartesian(ylim = c(0, 210))+ droseu_theme
p_SR_M_pop_Pasyukova
pdf(file="Starvation/p_SR_M_pop_Pasyukova.pdf", width=8, height=5)
p_SR_M_pop_Pasyukova
dev.off()
intersect_SR  <- Reduce(intersect, list(d_SR$Line[d_SR$Supervisor.PI == "Gonzalez"],
d_SR$Line[d_SR$Supervisor.PI == "Pasyukova"],
d_SR$Line[d_SR$Supervisor.PI == "Onder"]))
length(intersect_SR)
write(intersect_SR, file ="Starvation/SR_int.txt", sep = "\t")
SR_fitted <- combineFitted(labs = rep(c("Gonzalez", "Onder", "Pasyukova"), 2), sex = rep(c("F", "M"), each = 3), models = list(SR_F_lmer_Gonzalez, SR_F_lmer_Onder, SR_F_lmer_Pasyukova, SR_M_lmer_Gonzalez, SR_M_lmer_Onder, SR_M_lmer_Pasyukova))
scatterPlotMatrix(SR_fitted, sex = "F")
scatterPlotMatrix(SR_fitted, sex = "M")
# get the effects in the right shape
SR_effects <- SR_fitted %>%
dplyr::select(-Value) %>%
mutate(Population = factor(Population, levels = c("YE","RE","GI","MU","MA","UM","KA","VA","AK")),
Lab = as.factor(Lab),
V = SE^2,
Study = paste(Population, Lab, sep = "_")) %>%
relocate(Population, Sex, Lab, Study) %>%
arrange(Population) %>%
dplyr::rename(Y = Estimate)
# run the analysis with metagen package
SR_F_metagen <- metagen(data = SR_effects %>% filter(Sex == "F"), TE = Y, seTE = SE, studlab = Study, sm = "SMD", fixed = FALSE, random = TRUE)
SR_F_metagen <- update.meta(SR_F_metagen, subgroup = Population, tau.common = FALSE)
SR_F_metagen
?metagen
# run the analysis with metagen package
SR_F_metagen <- metagen(data = SR_effects %>% filter(Sex == "F"), TE = Y, seTE = SE, studlab = Study, sm = "SMD", fixed = FALSE, random = TRUE, method.tau = "DL")
SR_F_metagen <- update.meta(SR_F_metagen, subgroup = Population, tau.common = FALSE)
SR_F_metagen
summary(SR_F_metagen)
SR_F_metagen
# run the analysis with metagen package
SR_F_metagen <- metagen(data = SR_effects %>% filter(Sex == "F"), TE = Y, seTE = SE, studlab = Study, sm = "SMD", fixed = FALSE, random = TRUE, method.tau = "DL")
SR_F_metagen <- update.meta(SR_F_metagen, subgroup = Population, tau.common = FALSE)
capture.output(summary(SR_F_metagen), file = "Starvation/SR_F_metagen_sum.txt")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '~/Work/UNIFR/Github/DrosEU_PhenotypingWG/') # change this
library(tidyverse)
library(ggpubr)
library(multcompView)
library(multcomp)
#library(hrbrthemes)
#library(rworldmap)
#library(maps)
#library(rnaturalearth)
#library(maptools)
#library(rgeos)
#library(qwraps2)
#library(afex)
#library(Hmisc)
library(lme4)
#library(nlme)
library(emmeans)
library(coxme)
#library(sf)
#library(rnaturalearthdata)
library(cowplot)
#library(googleway)
#library(ggrepel)
#library(ggspatial)
library(DT)
library(data.table)
library(survival)
library(survminer)
library(meta)
library(metafor)
source("lab_correlations_functions.R") # you need to source this to make the lab correlation plot
source("meta_analysis_functions.R")
std_err <- function(x) sd(x)/sqrt(length(x))
coef_var <- function(x) sd(x)/mean(x)
estimate_mode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
droseu_theme <- theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black",),  axis.title.x = element_text(size = 16), axis.text.x = element_text(size = 16),axis.text.y = element_text(size = 16),axis.title.y = element_text(size = 16))
# run the analysis with metagen package
SR_F_metagen <- metagen(data = SR_effects %>% filter(Sex == "F"), TE = Y, seTE = SE, studlab = Study, sm = "SMD", fixed = FALSE, random = TRUE, method.tau = "DL")
SR_F_metagen <- update.meta(SR_F_metagen, subgroup = Population, tau.common = FALSE)
capture.output(summary(SR_F_metagen), file = "Starvation/SR_F_metagen_sum.txt")
SR_F_metagen
# run the analysis with EK's code for quick plotting
SR_F_meta <- metaAnalysisRandomModel(SR_effects %>% filter(Sex == "F"))
p_SR_F_meta_SE <- SR_F_meta$summary_effects_random %>%
dplyr::select(Population, Mstar, SEMstar) %>%
distinct() %>%
ggplot(aes(x = Mstar, y = 1:length(Population), color = Population)) +
theme_bw() +
geom_point(size = 4, shape = 15) +
#scale_color_manual(values = pops$by_lat$Color, guide = "none") +
geom_errorbarh(aes(xmax = Mstar + SEMstar, xmin = Mstar - SEMstar), height = 0) +
scale_y_continuous(name = "Population", breaks = 1:9,
labels = c("YE","RE","GI","MU","MA","UM","KA","VA","AK")) +
labs(x = "Age at death (days)", title = "Pop. summary effect with SE") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
annotate("text", x = -Inf, y = Inf, label = sprintf("italic(Q) == %.4g", SR_F_meta$Qtest_het$Q),
hjust=-0.2, vjust=3.5, parse = T) +
annotate("text", x = -Inf, y = Inf, label = sprintf("italic(p) == %.4g", SR_F_meta$Qtest_het$p),
hjust=-0.2, vjust=5, parse = T) +
theme(legend.position = "none")
p_SR_F_meta_CI <- SR_F_meta$summary_effects_random %>%
dplyr::select(Population, Mstar, ULMstar, LLMstar) %>%
distinct() %>%
ggplot(aes(x = Mstar, y = 1:length(Population), color = Population)) +
theme_bw() +
geom_point(size = 4, shape = 15) +
#scale_color_manual(values = pops$by_lat$Color, guide = "none") +
geom_errorbarh(aes(xmax = ULMstar, xmin = LLMstar), height = 0) +
scale_y_continuous(name = "Population", breaks = 1:9,
labels = c("YE","RE","GI","MU","MA","UM","KA","VA","AK")) +
labs(x = "Age at death (days)", title = "Pop. summary effect with 95% CI") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
annotate("text", x = -Inf, y = Inf, label = sprintf("italic(Q) == %.4g", SR_F_meta$Qtest_het$Q),
hjust=-0.2, vjust=3.5, parse = T) +
annotate("text", x = -Inf, y = Inf, label = sprintf("italic(p) == %.4g", SR_F_meta$Qtest_het$p),
hjust=-0.2, vjust=5, parse = T) +
theme(legend.position = "none")
ggarrange(p_SR_F_meta_SE, p_SR_F_meta_CI)
pdf(file="Starvation/p_SR_F_meta.pdf", width=8, height=5)
ggarrange(p_SR_F_meta_SE, p_SR_F_meta_CI)
dev.off()
# run the analysis with metagen package
SR_M_metagen <- metagen(data = SR_effects %>% filter(Sex == "M"), TE = Y, seTE = SE, studlab = Study, sm = "SMD", fixed = FALSE, random = TRUE, method.tau = "DL")
SR_M_metagen <- update.meta(SR_F_metagen, subgroup = Population, tau.common = FALSE)
capture.output(summary(SR_M_metagen), file = "Starvation/SR_M_metagen_sum.txt")
SR_M_metagen
# run the analysis with metagen package
SR_M_metagen <- metagen(data = SR_effects %>% filter(Sex == "M"), TE = Y, seTE = SE, studlab = Study, sm = "SMD", fixed = FALSE, random = TRUE, method.tau = "DL")
SR_M_metagen <- update.meta(SR_M_metagen, subgroup = Population, tau.common = FALSE)
capture.output(summary(SR_M_metagen), file = "Starvation/SR_M_metagen_sum.txt")
SR_M_metagen
# run the analysis with EK's code for quick plotting
SR_M_meta <- metaAnalysisRandomModel(SR_effects %>% filter(Sex == "M"))
pdf(file="Starvation/p_SR_M_meta.pdf", width=8, height=5)
ggarrange(p_SR_M_meta_SE, p_SR_M_meta_CI)
p_SR_M_meta_SE <- SR_M_meta$summary_effects_random %>%
dplyr::select(Population, Mstar, SEMstar) %>%
distinct() %>%
ggplot(aes(x = Mstar, y = 1:length(Population), color = Population)) +
theme_bw() +
geom_point(size = 4, shape = 15) +
#scale_color_manual(values = pops$by_lat$Color, guide = "none") +
geom_errorbarh(aes(xmax = Mstar + SEMstar, xmin = Mstar - SEMstar), height = 0) +
scale_y_continuous(name = "Population", breaks = 1:9,
labels = c("YE","RE","GI","MU","MA","UM","KA","VA","AK")) +
labs(x = "Age at death (days)", title = "Pop. summary effect with SE") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
annotate("text", x = -Inf, y = Inf, label = sprintf("italic(Q) == %.4g", SR_M_meta$Qtest_het$Q),
hjust=-0.2, vjust=3.5, parse = T) +
annotate("text", x = -Inf, y = Inf, label = sprintf("italic(p) == %.4g", SR_M_meta$Qtest_het$p),
hjust=-0.2, vjust=5, parse = T) +
theme(legend.position = "hours")
p_SR_M_meta_CI <- SR_M_meta$summary_effects_random %>%
dplyr::select(Population, Mstar, ULMstar, LLMstar) %>%
distinct() %>%
ggplot(aes(x = Mstar, y = 1:length(Population), color = Population)) +
theme_bw() +
geom_point(size = 4, shape = 15) +
#scale_color_manual(values = pops$by_lat$Color, guide = "none") +
geom_errorbarh(aes(xmax = ULMstar, xmin = LLMstar), height = 0) +
scale_y_continuous(name = "Population", breaks = 1:9,
labels = c("YE","RE","GI","MU","MA","UM","KA","VA","AK")) +
labs(x = "Age at death (hours)", title = "Pop. summary effect with 95% CI") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
annotate("text", x = -Inf, y = Inf, label = sprintf("italic(Q) == %.4g", SR_M_meta$Qtest_het$Q),
hjust=-0.2, vjust=3.5, parse = T) +
annotate("text", x = -Inf, y = Inf, label = sprintf("italic(p) == %.4g", SR_M_meta$Qtest_het$p),
hjust=-0.2, vjust=5, parse = T) +
theme(legend.position = "none")
ggarrange(p_SR_M_meta_SE, p_SR_M_meta_CI)
pdf(file="Starvation/p_SR_M_meta.pdf", width=8, height=5)
ggarrange(p_SR_M_meta_SE, p_SR_M_meta_CI)
dev.off()
matrix(c(28,44,28), c(25,50,25))
matrix(c(28,44,28), c(25,50,25), ncol = 2)
matrix(c(28,44,28, 25,50,25), ncol = 2)
chisq.test(matrix(c(28,44,28, 25,50,25), ncol = 2))
chisq.test(matrix(c(28,44,28, 25,50,25), ncol = 3, byrow = T))
matrix(c(28, 44, 28, 25, 50, 25), ncol = 3, byrow = T)
?chisq.test
chisq.test(c(28,44,28), c(25,50,25))
0.15/4*10−8
0.15/4*10^-8
2*(0.15/4*10^-8)
0.15/(4*10^-8)
10^-3
##### clean workspace
rm(list = ls())
##### libraries
library(tidyverse)
library(meta)
library(ggpubr)
##### set working directory
setwd("~/Work/UNIFR/GitHub/DrosEU_PhenotypingWG/")
##### source functions
source("Functions/lab_correlations_functions.R")
source("Functions/meta_analysis_functions.R")
##### load data
droseu <- readRDS("Data/droseu_master_list_2022-03-25.rds")
estimates <- readRDS("LinearModelsPop/all_model_estimates.rds")
pops <- readRDS("InfoTables/DrosEU_Populations.rds")
rdsBatchReaderToList <- function(...) {
temp = list.files(...)
tnames <- str_split(temp, "/", simplify = T)[,3]
tnames <- str_replace(tnames, ".rds", "")
tlist <- lapply(temp, readRDS)
names(tlist) <- tnames
return(tlist)
}
metas <- rdsBatchReaderToList(path = "MetaAnalyses", recursive = T, full.names = T, pattern = "meta.rds")
metas_pvalues <- bind_rows(Meta = names(metas), Pvalue = lapply(metas, function(x) x$pval.Q.b.random) %>% unlist())
metas_pvalues <- mutate(metas_pvalues, Pvalue_bonf = Pvalue * 12)
metas_pvalues
print(metas_pvalues)
print(metas_pvalues, n=24)
metas_pvalues <- mutate(metas_pvalues, Pvalue_bonf = Pvalue * 12) %>%
mutate(Pvalue_bonf = ifelse(Pvalue_bonf > 1, 1, Pvalue_bonf))
metas_pvalues
