estimate_mode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
droseu_theme <- theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black",),  axis.title.x = element_text(size = 16), axis.text.x = element_text(size = 16),axis.text.y = element_text(size = 16),axis.title.y = element_text(size = 16))
# run the analysis with metagen package
SR_F_metagen <- metagen(data = SR_effects %>% filter(Sex == "F"), TE = Y, seTE = SE, studlab = Study, sm = "SMD", fixed = FALSE, random = TRUE, method.tau = "DL")
SR_F_metagen <- update.meta(SR_F_metagen, subgroup = Population, tau.common = FALSE)
capture.output(summary(SR_F_metagen), file = "Starvation/SR_F_metagen_sum.txt")
SR_F_metagen
# run the analysis with EK's code for quick plotting
SR_F_meta <- metaAnalysisRandomModel(SR_effects %>% filter(Sex == "F"))
p_SR_F_meta_SE <- SR_F_meta$summary_effects_random %>%
dplyr::select(Population, Mstar, SEMstar) %>%
distinct() %>%
ggplot(aes(x = Mstar, y = 1:length(Population), color = Population)) +
theme_bw() +
geom_point(size = 4, shape = 15) +
#scale_color_manual(values = pops$by_lat$Color, guide = "none") +
geom_errorbarh(aes(xmax = Mstar + SEMstar, xmin = Mstar - SEMstar), height = 0) +
scale_y_continuous(name = "Population", breaks = 1:9,
labels = c("YE","RE","GI","MU","MA","UM","KA","VA","AK")) +
labs(x = "Age at death (days)", title = "Pop. summary effect with SE") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
annotate("text", x = -Inf, y = Inf, label = sprintf("italic(Q) == %.4g", SR_F_meta$Qtest_het$Q),
hjust=-0.2, vjust=3.5, parse = T) +
annotate("text", x = -Inf, y = Inf, label = sprintf("italic(p) == %.4g", SR_F_meta$Qtest_het$p),
hjust=-0.2, vjust=5, parse = T) +
theme(legend.position = "none")
p_SR_F_meta_CI <- SR_F_meta$summary_effects_random %>%
dplyr::select(Population, Mstar, ULMstar, LLMstar) %>%
distinct() %>%
ggplot(aes(x = Mstar, y = 1:length(Population), color = Population)) +
theme_bw() +
geom_point(size = 4, shape = 15) +
#scale_color_manual(values = pops$by_lat$Color, guide = "none") +
geom_errorbarh(aes(xmax = ULMstar, xmin = LLMstar), height = 0) +
scale_y_continuous(name = "Population", breaks = 1:9,
labels = c("YE","RE","GI","MU","MA","UM","KA","VA","AK")) +
labs(x = "Age at death (days)", title = "Pop. summary effect with 95% CI") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
annotate("text", x = -Inf, y = Inf, label = sprintf("italic(Q) == %.4g", SR_F_meta$Qtest_het$Q),
hjust=-0.2, vjust=3.5, parse = T) +
annotate("text", x = -Inf, y = Inf, label = sprintf("italic(p) == %.4g", SR_F_meta$Qtest_het$p),
hjust=-0.2, vjust=5, parse = T) +
theme(legend.position = "none")
ggarrange(p_SR_F_meta_SE, p_SR_F_meta_CI)
pdf(file="Starvation/p_SR_F_meta.pdf", width=8, height=5)
ggarrange(p_SR_F_meta_SE, p_SR_F_meta_CI)
dev.off()
# run the analysis with metagen package
SR_M_metagen <- metagen(data = SR_effects %>% filter(Sex == "M"), TE = Y, seTE = SE, studlab = Study, sm = "SMD", fixed = FALSE, random = TRUE, method.tau = "DL")
SR_M_metagen <- update.meta(SR_F_metagen, subgroup = Population, tau.common = FALSE)
capture.output(summary(SR_M_metagen), file = "Starvation/SR_M_metagen_sum.txt")
SR_M_metagen
# run the analysis with metagen package
SR_M_metagen <- metagen(data = SR_effects %>% filter(Sex == "M"), TE = Y, seTE = SE, studlab = Study, sm = "SMD", fixed = FALSE, random = TRUE, method.tau = "DL")
SR_M_metagen <- update.meta(SR_M_metagen, subgroup = Population, tau.common = FALSE)
capture.output(summary(SR_M_metagen), file = "Starvation/SR_M_metagen_sum.txt")
SR_M_metagen
# run the analysis with EK's code for quick plotting
SR_M_meta <- metaAnalysisRandomModel(SR_effects %>% filter(Sex == "M"))
pdf(file="Starvation/p_SR_M_meta.pdf", width=8, height=5)
ggarrange(p_SR_M_meta_SE, p_SR_M_meta_CI)
p_SR_M_meta_SE <- SR_M_meta$summary_effects_random %>%
dplyr::select(Population, Mstar, SEMstar) %>%
distinct() %>%
ggplot(aes(x = Mstar, y = 1:length(Population), color = Population)) +
theme_bw() +
geom_point(size = 4, shape = 15) +
#scale_color_manual(values = pops$by_lat$Color, guide = "none") +
geom_errorbarh(aes(xmax = Mstar + SEMstar, xmin = Mstar - SEMstar), height = 0) +
scale_y_continuous(name = "Population", breaks = 1:9,
labels = c("YE","RE","GI","MU","MA","UM","KA","VA","AK")) +
labs(x = "Age at death (days)", title = "Pop. summary effect with SE") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
annotate("text", x = -Inf, y = Inf, label = sprintf("italic(Q) == %.4g", SR_M_meta$Qtest_het$Q),
hjust=-0.2, vjust=3.5, parse = T) +
annotate("text", x = -Inf, y = Inf, label = sprintf("italic(p) == %.4g", SR_M_meta$Qtest_het$p),
hjust=-0.2, vjust=5, parse = T) +
theme(legend.position = "hours")
p_SR_M_meta_CI <- SR_M_meta$summary_effects_random %>%
dplyr::select(Population, Mstar, ULMstar, LLMstar) %>%
distinct() %>%
ggplot(aes(x = Mstar, y = 1:length(Population), color = Population)) +
theme_bw() +
geom_point(size = 4, shape = 15) +
#scale_color_manual(values = pops$by_lat$Color, guide = "none") +
geom_errorbarh(aes(xmax = ULMstar, xmin = LLMstar), height = 0) +
scale_y_continuous(name = "Population", breaks = 1:9,
labels = c("YE","RE","GI","MU","MA","UM","KA","VA","AK")) +
labs(x = "Age at death (hours)", title = "Pop. summary effect with 95% CI") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
annotate("text", x = -Inf, y = Inf, label = sprintf("italic(Q) == %.4g", SR_M_meta$Qtest_het$Q),
hjust=-0.2, vjust=3.5, parse = T) +
annotate("text", x = -Inf, y = Inf, label = sprintf("italic(p) == %.4g", SR_M_meta$Qtest_het$p),
hjust=-0.2, vjust=5, parse = T) +
theme(legend.position = "none")
ggarrange(p_SR_M_meta_SE, p_SR_M_meta_CI)
pdf(file="Starvation/p_SR_M_meta.pdf", width=8, height=5)
ggarrange(p_SR_M_meta_SE, p_SR_M_meta_CI)
dev.off()
matrix(c(28,44,28), c(25,50,25))
matrix(c(28,44,28), c(25,50,25), ncol = 2)
matrix(c(28,44,28, 25,50,25), ncol = 2)
chisq.test(matrix(c(28,44,28, 25,50,25), ncol = 2))
chisq.test(matrix(c(28,44,28, 25,50,25), ncol = 3, byrow = T))
matrix(c(28, 44, 28, 25, 50, 25), ncol = 3, byrow = T)
?chisq.test
chisq.test(c(28,44,28), c(25,50,25))
0.15/4*10âˆ’8
0.15/4*10^-8
2*(0.15/4*10^-8)
0.15/(4*10^-8)
10^-3
##### clean workspace
rm(list = ls())
##### libraries
library(tidyverse)
library(meta)
library(ggpubr)
##### set working directory
setwd("~/Work/UNIFR/GitHub/DrosEU_PhenotypingWG/")
##### source functions
source("Functions/lab_correlations_functions.R")
source("Functions/meta_analysis_functions.R")
##### load data
droseu <- readRDS("Data/droseu_master_list_2022-03-25.rds")
estimates <- readRDS("LinearModelsPop/all_model_estimates.rds")
pops <- readRDS("InfoTables/DrosEU_Populations.rds")
rdsBatchReaderToList <- function(...) {
temp = list.files(...)
tnames <- str_split(temp, "/", simplify = T)[,3]
tnames <- str_replace(tnames, ".rds", "")
tlist <- lapply(temp, readRDS)
names(tlist) <- tnames
return(tlist)
}
metas <- rdsBatchReaderToList(path = "MetaAnalyses", recursive = T, full.names = T, pattern = "meta.rds")
metas_pvalues <- bind_rows(Meta = names(metas), Pvalue = lapply(metas, function(x) x$pval.Q.b.random) %>% unlist())
metas_pvalues <- mutate(metas_pvalues, Pvalue_bonf = Pvalue * 12)
metas_pvalues
print(metas_pvalues)
print(metas_pvalues, n=24)
metas_pvalues <- mutate(metas_pvalues, Pvalue_bonf = Pvalue * 12) %>%
mutate(Pvalue_bonf = ifelse(Pvalue_bonf > 1, 1, Pvalue_bonf))
metas_pvalues
dir.create(file.path("Viability"), showWarnings = FALSE)
droseu <- readRDS("Data/droseu_master_list_2022-04-05.rds")
d_Via <- filter(droseu$via)
d_Via <- tidyverse::filter(droseu$via)
d_Via <- droseu$via
str(d_Via)
str(droseu$via)
load("/Users/durmazm/Documents/GitHub/DrosEU_PhenotypingWG/LinearModelsPop/all_lmers_pop.Rdata")
droseu <- readRDS("Data/droseu_master_list_2022-04-05.rds")
lmers_pop <- readRDS("LinearModelsPop/all_lmers_list_pop_anova.rds")
lmers_tukey <- readRDS("LinearModelsPop/all_lmers_list_pop_tukey.rds")
lmers_sum <- readRDS("LinearModelsPop/all_lmers_list_pop_summary.rds")
lmers_all <- readRDS("LinearModelsPop/all_lmers_list_pop.rds")
View(lmers_all)
View(lmers_pop)
View(lmers_pop)
View(lmers_all)
View(lmers_all)
droseu <- readRDS("Data/droseu_master_list_2022-04-05.rds")
lmers_anova <- readRDS("LinearModelsPop/all_lmers_list_pop_anova.rds")
lmers_tukey <- readRDS("LinearModelsPop/all_lmers_list_pop_tukey.rds")
lmers_sum <- readRDS("LinearModelsPop/all_lmers_list_pop_summary.rds")
table_line_wbatch <- readRDS("DescriptiveStatistics/all_table_Line_wbatch.rds")
table_line_wobatch <- readRDS("DescriptiveStatistics/all_table_Line_wobatch.rds")
table_pop_wbatch <- readRDS("DescriptiveStatistics/all_table_Pop_wbatch.rds")
table_pop_wobatch <- readRDS("DescriptiveStatistics/all_table_Pop_wobatch.rds")
load("/Users/durmazm/Documents/GitHub/DrosEU_PhenotypingWG/LinearModelsAlt/all_lmers_alt.Rdata")
view(load("/Users/durmazm/Documents/GitHub/DrosEU_PhenotypingWG/LinearModelsAlt/all_lmers_alt.Rdata"))
print(load("/Users/durmazm/Documents/GitHub/DrosEU_PhenotypingWG/LinearModelsAlt/all_lmers_alt.Rdata"))
da <- load("/Users/durmazm/Documents/GitHub/DrosEU_PhenotypingWG/LinearModelsAlt/all_lmers_alt.Rdata")
da
droseu <- readRDS("Data/droseu_master_list_2022-04-05.rds")
lmers_anova <- readRDS("LinearModelsPop/all_lmers_list_pop_anova.rds")
lmers_tukey <- readRDS("LinearModelsPop/all_lmers_list_pop_tukey.rds")
lmers_sum <- readRDS("LinearModelsPop/all_lmers_list_pop_summary.rds")
table_line_wbatch <- readRDS("DescriptiveStatistics/all_table_Line_wbatch.rds")
table_line_wobatch <- readRDS("DescriptiveStatistics/all_table_Line_wobatch.rds")
table_pop_wbatch <- readRDS("DescriptiveStatistics/all_table_Pop_wbatch.rds")
table_pop_wobatch <- readRDS("DescriptiveStatistics/all_table_Pop_wobatch.rds")
DT::datatable(table_line_wbatch$Via, options = list(pageLength = 10)) %>% formatRound(6:13, 3)
library(tidyverse)
library(ggpubr)
library(multcompView)
library(hrbrthemes)
library(rworldmap)
library(maps)
library(rnaturalearth)
library(maptools)
library(rgeos)
library(qwraps2)
library(afex)
library(Hmisc)
library(lme4)
library(nlme)
library(multcomp)
library(emmeans)
library(coxme)
library(knitr)
library(sf)
library(rnaturalearthdata)
library(cowplot)
library(googleway)
library(ggrepel)
library(ggspatial)
library(DT)
library(data.table)
library(meta)
library(metafor)
library(survival)
library(survminer)
DT::datatable(table_line_wbatch$Via, options = list(pageLength = 10)) %>% formatRound(6:13, 3)
DT::datatable(table_line_wbatch$Via, options = list(pageLength = 10)) %>% formatRound(6:13, 3)
table_Via_Line_wbatch <- table_line_wbatch$Via
DT::datatable(table_Via_Line_wbatch, options = list(pageLength = 10)) %>% formatRound(6:13, 3)
DT::datatable(table_pop_wobatch$Via, options = list(pageLength = 10)) %>% formatRound(4:11, 3)
anova(lmers_anova$Via_Gibert_lmer_pop)
lmers_anova$Via_Gibert_lmer_pop
lmers_sum$Via_Gibert_lmer_pop
p_Via_pop_Gibert <- ggplot(data = (subset(d_Via,Supervisor.PI=='Gibert')), aes(x=Population_Lat, y=ProportionEggtoAdultSurvival, fill=Population)) +geom_boxplot(outlier.shape = NA, notch=FALSE) + labs(title="p_Via_pop_Gibert", x="Population", y = "ProportionEggtoAdultSurvival") + ylim(c(min_Via, max_Via))+ geom_text(data = lmers_tukey$Via_Gibert_lmer_pop, aes(x = Population, label = cld), y = max_Via, vjust = 1) + droseu_theme
p_Via_pop_Gibert <- ggplot(data = (subset(droseu$via,Supervisor.PI=='Gibert')), aes(x=Population_Lat, y=ProportionEggtoAdultSurvival, fill=Population)) +geom_boxplot(outlier.shape = NA, notch=FALSE) + labs(title="p_Via_pop_Gibert", x="Population", y = "ProportionEggtoAdultSurvival") + ylim(c(min_Via, max_Via))+ geom_text(data = lmers_tukey$Via_Gibert_lmer_pop, aes(x = Population, label = cld), y = max_Via, vjust = 1) + droseu_theme
min_Via <- min(d_Via$ProportionEggtoAdultSurvival)
min_Via <- min(droseu$via$ProportionEggtoAdultSurvival)
max_Via <- max(droseu$via$ProportionEggtoAdultSurvival)
p_Via_pop_Gibert <- ggplot(data = (subset(droseu$via,Supervisor.PI=='Gibert')), aes(x=Population_Lat, y=ProportionEggtoAdultSurvival, fill=Population)) +geom_boxplot(outlier.shape = NA, notch=FALSE) + labs(title="p_Via_pop_Gibert", x="Population", y = "ProportionEggtoAdultSurvival") + ylim(c(min_Via, max_Via))+ geom_text(data = lmers_tukey$Via_Gibert_lmer_pop, aes(x = Population, label = cld), y = max_Via, vjust = 1) + droseu_theme
p_Via_pop_Gibert <- ggplot(data = filter(droseu$via, Supervisor.PI == "Gibert"), aes(x=Population_Lat, y=ProportionEggtoAdultSurvival, fill=Population)) +geom_boxplot(outlier.shape = NA, notch=FALSE) + labs(title="p_Via_pop_Gibert", x="Population", y = "ProportionEggtoAdultSurvival") + ylim(c(min_Via, max_Via))+ geom_text(data = lmers_tukey$Via_Gibert_lmer_pop, aes(x = Population, label = cld), y = max_Via, vjust = 1) + droseu_theme
DT::datatable(table_line_wbatch$Via, options = list(pageLength = 10)) %>% formatRound(6:13, 3)
str(droseu$via)
p_Via_pop_Gibert <- ggplot(data = filter(droseu$via, Supervisor.PI == "Gibert"), aes(x=Population_Lat, y=ProportionEggtoAdultSurvival, fill=Population)) +geom_boxplot(outlier.shape = NA, notch=FALSE) + labs(title="p_Via_pop_Gibert", x="Population", y = "ProportionEggtoAdultSurvival") + ylim(c(min_Via, max_Via))+ #geom_text(data = lmers_tukey$Via_Gibert_lmer_pop, aes(x = Population, label = cld), y = max_Via, vjust = 1) + droseu_theme
p_Via_pop_Gibert <- ggplot(data = filter(droseu$via, Supervisor.PI == "Gibert"), aes(x=Population_Lat, y=ProportionEggtoAdultSurvival, fill=Population)) +geom_boxplot(outlier.shape = NA, notch=FALSE) + labs(title="p_Via_pop_Gibert", x="Population", y = "ProportionEggtoAdultSurvival") + ylim(c(min_Via, max_Via)) #geom_text(data = lmers_tukey$Via_Gibert_lmer_pop, aes(x = Population, label = cld), y = max_Via, vjust = 1) + droseu_theme
p_Via_pop_Gibert <- ggplot(data = filter(droseu$via, Supervisor.PI == "Gibert"), aes(x=Population_Lat, y=ProportionEggtoAdultSurvival, fill=Population)) +geom_boxplot(outlier.shape = NA, notch=FALSE) + labs(title="p_Via_pop_Gibert", x="Population", y = "ProportionEggtoAdultSurvival") + ylim(c(min_Via, max_Via)) + geom_text(data = lmers_tukey$Via_Gibert_lmer_pop, aes(x = Population_Lat, label = cld), y = max_Via, vjust = 1) + droseu_theme
## Need to run this in the background
droseu_theme <- theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black",),  axis.title.x = element_text(size = 16), axis.text.x = element_text(size = 16),axis.text.y = element_text(size = 16),axis.title.y = element_text(size = 16))
p_Via_pop_Gibert <- ggplot(data = filter(droseu$via, Supervisor.PI == "Gibert"), aes(x=Population_Lat, y=ProportionEggtoAdultSurvival, fill=Population)) +geom_boxplot(outlier.shape = NA, notch=FALSE) + labs(title="p_Via_pop_Gibert", x="Population", y = "ProportionEggtoAdultSurvival") + ylim(c(min_Via, max_Via)) + geom_text(data = lmers_tukey$Via_Gibert_lmer_pop$letters, aes(x = Population, label = cld), y = max_Via, vjust = 1) + droseu_theme
p_Via_pop_Gibert <- ggplot(data = filter(droseu$via, Supervisor.PI == "Gibert"), aes(x=Population_Lat, y=ProportionEggtoAdultSurvival, fill=Population))+geom_boxplot(outlier.shape = NA, notch=FALSE) + labs(title="p_Via_pop_Gibert", x="Population", y = "ProportionEggtoAdultSurvival") + ylim(c(min_Via, max_Via)) + geom_text(data = lmers_tukey$Via_Gibert_lmer_pop$letters, aes(x = Population, label = cld), y = inf, vjust = 1) + droseu_theme
p_Via_pop_Gibert <- ggplot(data = filter(droseu$via, Supervisor.PI == "Gibert"), aes(x=Population_Lat, y=ProportionEggtoAdultSurvival, fill=Population))+geom_boxplot(outlier.shape = NA, notch=FALSE) + labs(title="p_Via_pop_Gibert", x="Population", y = "ProportionEggtoAdultSurvival") + ylim(c(min_Via, max_Via)) + geom_text(data = lmers_tukey$Via_Gibert_lmer_pop$letters, aes(x = Population, label = cld), y = +inf, vjust = 1) + droseu_theme
p_Via_pop_Gibert <- ggplot(data = filter(droseu$via, Supervisor.PI == "Gibert"), aes(x=Population_Lat, y=ProportionEggtoAdultSurvival, fill=Population))+geom_boxplot(outlier.shape = NA, notch=FALSE) + labs(title="p_Via_pop_Gibert", x="Population", y = "ProportionEggtoAdultSurvival") + ylim(c(min_Via, max_Via)) + geom_text(data = lmers_tukey$Via_Gibert_lmer_pop$letters, aes(x = Population, label = cld), y = Inf, vjust = 1) + droseu_theme
lmers_anova$Via_Schmidt_lm_pop
lmers_anova$DT_A_F_Schmidt_lmer_pop
lmers_sum$DT_A_F_Schmidt_lmer_pop
knitr::include_graphics("LabCorrelations/ThoraxLength/TL_M_lab_correlations.png")
library(tidyverse)
library(ggpubr)
library(multcompView)
library(hrbrthemes)
library(rworldmap)
library(maps)
library(rnaturalearth)
library(maptools)
library(rgeos)
library(qwraps2)
library(afex)
library(Hmisc)
library(lme4)
library(nlme)
library(multcomp)
library(emmeans)
library(coxme)
library(knitr)
library(sf)
library(rnaturalearthdata)
library(cowplot)
library(googleway)
library(ggrepel)
library(ggspatial)
library(DT)
library(data.table)
library(meta)
library(metafor)
library(survival)
library(survminer)
droseu_coord <- read.csv("InfoTables/DrosEU_Coordinates.csv")
droseu_coord <- data.frame(droseu_coord %>%
add_column(Collector = c("Jorge Vieira", "Josefa Gonzalez", "Mads Schou", "Amanda Glaser-Schmitt","Andrea Betancourt","Maaria Kankare","Iryna Kozeretska","Banu Onder","Elena Pasyukova")))
knitr::kable(droseu_coord, align = "llcccl", caption = 'Table X. Sampling locations, coordinates and collectors, sorted by increasing latitude')
world <- ne_countries(scale = "medium", returnclass = "sf")
samples_map <- ggplot(data = world) + geom_sf() + xlab("Latitude") + ylab("Longitude") + ggplot2::coord_sf(xlim = c(-12, 38), ylim = c(30, 65), expand = FALSE) + annotation_scale(location = "bl", width_hint = 0.5) + ggtitle("Sampling locations")
map_theme <- theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black",), axis.title.x = element_text(size = 16), axis.text.x = element_text(size = 14, colour = "black"),axis.text.y = element_text(size = 14, colour = "black"),axis.title.y = element_text(size = 16), plot.title = element_text(color="black", size=14, face="bold"))
panmix_theme <- theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black",), axis.title.x = element_text(size = 16), axis.text.x = element_text(size = 16, colour = "black"), axis.text.y = element_text(size = 16, colour = "black"),axis.title.y = element_text(size = 16))
samples_map + map_theme +
annotate(geom = "point", x = -8.410, y = 41.150, colour = "orange", size = 3) +
annotate(geom = "point", x = 0.620, y = 41.618,colour = "orange", size = 3) +
annotate(geom = "point", x = 10.213, y = 55.945, colour = "orange", size = 3) +
annotate(geom = "point", x = 32.260, y = 40.231, colour = "orange", size = 3) +
annotate(geom = "point", x = 11.610, y = 48.180, colour = "orange", size = 3) +
annotate(geom = "point", x = 15.560, y = 48.375, colour = "orange", size = 3) +
annotate(geom = "point", x = 33.244, y = 57.979, colour = "orange", size = 3) +
annotate(geom = "point", x = 30.206, y = 48.753, colour = "orange", size = 3) +
annotate(geom = "point", x = 23.520, y = 61.100, colour = "orange", size = 3) +
annotate(geom = "text", x = -8.410, y = 41.150, label ="PT",fontface = "bold", color = "black", size =5, angle=15) +
annotate(geom = "text", x = 0.620, y = 41.618, label ="ES",fontface = "bold", color = "black", size =5, angle=15) +
annotate(geom = "text", x = 10.213, y = 55.945, label ="DK",fontface = "bold", color = "black", size =5, angle=15) +
annotate(geom = "text", x = 32.260, y = 40.231, label ="TR",fontface = "bold", color = "black", size =5, angle=15) +
annotate(geom = "text", x = 11.610, y = 48.180, label ="DE",fontface = "bold", color = "black", size =5, angle=15) +
annotate(geom = "text", x = 15.560, y = 48.375, label ="AT",fontface = "bold", color = "black", size =5, angle=15) +
annotate(geom = "text", x = 33.244, y = 57.979, label ="RU",fontface = "bold", color = "black", size =5, angle=15) +
annotate(geom = "text", x = 30.206, y = 48.753, label ="UA",fontface = "bold", color = "black", size =5, angle=15) +
annotate(geom = "text", x = 23.520, y = 61.100, label ="FI",fontface = "bold", color = "black", size =5, angle=15)
droseu_labs <- data.frame(read.csv("InfoTables/DrosEU_Labs.csv"))
knitr::kable(droseu_labs, allign = "llll", caption = "Table X. Contributed labs and traits, sorted by PI")
cities <- read.csv("InfoTables/DrosEU_cities.csv")
globe_labs <- ggplot(data = world) + geom_sf() + xlab("Latitude") + ylab("Longitude") +
coord_sf(xlim = c(-80.15, 40.12), ylim = c(-45, 60), expand = TRUE) +
ggtitle("Contributed labs", subtitle = paste0("(", length(unique(droseu_labs$Country)), " countries", ", ", length(unique(droseu_labs$PI)), " research groups", ")")) +
annotate(geom = "point", x = cities$Long, y = cities$Lat, colour = "red", size = 2)
globe_labs + map_theme
droseu_wol <- data.frame(read.csv("InfoTables/DrosEU_wolbachia_2021.csv"))
DT::datatable(droseu_wol, options = list(pageLength = 10))
Wol_Freqs <- data.frame(unique(droseu_wol$Population))
Wol_Pops <- c((AK_freq <- nrow(droseu_wol %>% filter(Population=="AK") %>% filter(Wolbachia=="1")) /
nrow(droseu_wol %>% filter(Population == "AK")) * 100),
(GI_freq <- nrow(droseu_wol %>% filter(Population=="GI") %>% filter(Wolbachia=="1")) /
nrow(droseu_wol %>% filter(Population == "GI")) * 100),
(KA_freq <- nrow(droseu_wol %>% filter(Population=="KA") %>% filter(Wolbachia=="1")) /
nrow(droseu_wol %>% filter(Population == "KA")) * 100),
(MA_freq <- nrow(droseu_wol %>% filter(Population=="MA") %>% filter(Wolbachia=="1")) /
nrow(droseu_wol %>% filter(Population == "MA")) * 100),
(MU_freq <- nrow(droseu_wol %>% filter(Population=="MU") %>% filter(Wolbachia=="1")) /
nrow(droseu_wol %>% filter(Population == "MU")) * 100),
(RE_freq <- nrow(droseu_wol %>% filter(Population=="RE") %>% filter(Wolbachia=="1")) /
nrow(droseu_wol %>% filter(Population == "RE")) * 100),
(UM_freq <- nrow(droseu_wol %>% filter(Population=="UM") %>% filter(Wolbachia=="1")) /
nrow(droseu_wol %>% filter(Population == "UM")) * 100),
(VA_freq <- nrow(droseu_wol %>% filter(Population=="VA") %>% filter(Wolbachia=="1")) /
nrow(droseu_wol %>% filter(Population == "VA")) * 100),
(YE_freq <- nrow(droseu_wol %>% filter(Population=="YE") %>% filter(Wolbachia=="1")) /
nrow(droseu_wol %>% filter(Population == "YE")) * 100))
pop_freqs <- cbind(unique(droseu_wol$Country), Wol_Freqs, Wol_Pops)
cols <- c("Country", "Population", "Wolbachia_Freq")
wolbachia_pop_freqs <- setnames(pop_freqs, cols)
wolbachia_pop_freqs # Wolbachia frequency by country and population abbreviation
droseu_diets <- data.frame(read.csv("InfoTables/DrosEU_Diets_Feb22.csv"))
DT::datatable(droseu_diets, options = list(pageLength = 10))
headers <- c("Supervisor/PI", "Diet", "Batch", "Population", "Line", "Sex", "ReplicateVial", "TraitValue")
descriptions <- c("Lab identifier", "Either standardized _S_ or non-standardized _NS_ ", "From 1 to n" , "Population identifier in abbreviated form (i.e. _AK_)", "Line identifier (i.e. _MU1_)", "Either female (F) or male (M)", "Replicate identifier (from 1 to n)", "Trait value in x units")
README_example <- data.table(Headers =  headers, Descriptions = descriptions)
knitr::kable(README_example, align = "ll", caption = 'Table X. Filling in the data spreadsheet and header description')
MS_example <- data.table(read.csv("Data/MasterSheets_Feb22_git/VIA_MasterSheet_Feb22.csv"))
DT::datatable(MS_example, options = list(pageLength = 10))
## First defined standard error and coefficient of variation
std_err <- function(x) sd(x)/sqrt(length(x))
coef_var <- function(x) sd(x)/mean(x)
estimate_mode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
## Need to run this in the background
droseu_theme <- theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black",),  axis.title.x = element_text(size = 16), axis.text.x = element_text(size = 16),axis.text.y = element_text(size = 16),axis.title.y = element_text(size = 16))
source("Functions/lab_correlations_functions.R")
source("Functions/meta_analysis_functions.R")
source("Functions/survival_functions.R")
droseu <- readRDS("Data/droseu_master_list_2022-04-05.rds")
lmers_anova <- readRDS("LinearModelsPop/all_lmers_list_pop_anova.rds")
lmers_tukey <- readRDS("LinearModelsPop/all_lmers_list_pop_tukey.rds")
lmers_sum <- readRDS("LinearModelsPop/all_lmers_list_pop_summary.rds")
table_line_wbatch <- readRDS("DescriptiveStatistics/all_table_Line_wbatch.rds")
table_line_wobatch <- readRDS("DescriptiveStatistics/all_table_Line_wobatch.rds")
table_pop_wbatch <- readRDS("DescriptiveStatistics/all_table_Pop_wbatch.rds")
table_pop_wobatch <- readRDS("DescriptiveStatistics/all_table_Pop_wobatch.rds")
dir.create(file.path("Viability"), showWarnings = FALSE)
str(droseu$via)
DT::datatable(table_line_wbatch$Via, options = list(pageLength = 10)) %>% formatRound(6:13, 3)
DT::datatable(table_line_wobatch$Via, options = list(pageLength = 10)) %>% formatRound(5:12, 3)
DT::datatable(table_pop_wbatch$Via, options = list(pageLength = 10))  %>% formatRound(5:12, 3)
DT::datatable(table_pop_wobatch$Via, options = list(pageLength = 10)) %>% formatRound(4:11, 3)
min_Via <- min(droseu$via$ProportionEggtoAdultSurvival)
max_Via <- max(droseu$via$ProportionEggtoAdultSurvival)
p_Via_all <- ggplot(data = droseu$via, aes(x=Population_Lat, y=ProportionEggtoAdultSurvival, fill=Supervisor.PI)) +
geom_boxplot(outlier.shape = NA, notch=FALSE) +
labs(title="p_Via_all", x="Population", y = "DW_micrograms") +
ylim(c(min_Via, max_Via))+ droseu_theme
p_Via_all
pdf(file="Viability/p_Via_all.pdf",width=8, height=5)
p_Via_all
invisible(dev.off())
lmers_anova$Via_Gibert_lmer_pop
lmers_sum$Via_Gibert_lmer_pop
p_Via_Gibert <- ggplot(data = (subset(d_Via,Supervisor.PI=='Gibert')), aes(x=Population_Lat, y=ProportionEggtoAdultSurvival, fill=Batch)) + geom_boxplot(outlier.shape = NA, notch=FALSE) + labs(title="p_Via_Gibert", x="Population", y = "ProportionEggtoAdultSurvival") + ylim(c(min_Via, max_Via)) + droseu_theme
library(tidyverse)
library(ggpubr)
library(multcompView)
library(hrbrthemes)
library(rworldmap)
library(maps)
library(rnaturalearth)
library(maptools)
library(rgeos)
library(qwraps2)
library(afex)
library(Hmisc)
library(lme4)
library(nlme)
library(multcomp)
library(emmeans)
library(coxme)
library(knitr)
library(sf)
library(rnaturalearthdata)
library(cowplot)
library(googleway)
library(ggrepel)
library(ggspatial)
library(DT)
library(data.table)
library(meta)
library(metafor)
library(survival)
library(survminer)
droseu <- readRDS("Data/droseu_master_list_2022-04-05.rds")
lmers_anova <- readRDS("LinearModelsPop/all_lmers_list_pop_anova.rds")
lmers_tukey <- readRDS("LinearModelsPop/all_lmers_list_pop_tukey.rds")
lmers_sum <- readRDS("LinearModelsPop/all_lmers_list_pop_summary.rds")
table_line_wbatch <- readRDS("DescriptiveStatistics/all_table_Line_wbatch.rds")
table_line_wobatch <- readRDS("DescriptiveStatistics/all_table_Line_wobatch.rds")
table_pop_wbatch <- readRDS("DescriptiveStatistics/all_table_Pop_wbatch.rds")
table_pop_wobatch <- readRDS("DescriptiveStatistics/all_table_Pop_wobatch.rds")
intersect_Via_line  <- Reduce(intersect, list(droseu$via$Line[droseu$via$Supervisor.PI == "Gibert"],
droseu$via$Line[droseu$via$Supervisor.PI == "Grath"],
droseu$via$Line[droseu$via$Supervisor.PI == "Hoedjes"],
droseu$via$Line[droseu$via$Supervisor.PI == "Schmidt"],
droseu$via$Line[droseu$via$Supervisor.PI == "StamenkovicRadak"],
droseu$via$Line[droseu$via$Supervisor.PI == "Zwaan"]))
write(intersect_Via_line, file ="Viability/Via_int_line.txt", sep = "\t")
intersect_Via_pop  <- Reduce(intersect, list(droseu$via$Population[droseu$via$Supervisor.PI == "Gibert"],
droseu$via$Population[droseu$via$Supervisor.PI == "Grath"],
droseu$via$via$Population[droseu$via$Supervisor.PI == "Hoedjes"],
droseu$via$Population[droseu$via$Supervisor.PI == "Schmidt"],
droseu$via$Population[droseu$via$Supervisor.PI == "StamenkovicRadak"],
droseu$via$Population[droseu$via$Supervisor.PI == "Zwaan"]))
write(intersect_Via_pop, file ="Viability/Via_int_pop.txt", sep = "\t")
lmers_lat <- readRDS("LinearModelsLat/all_lmers_list_lat_anova.rds")
lmers_lon <- readRDS("LinearModelsLon/all_lmers_list_lon_anova.rds")
lmers_alt <- readRDS("LinearModelsAlt/all_lmers_list_alt_anova.rds")
### Chill-coma recovery time
lmers_lon$Pgm_Total_Schmidt_lmer_lon
install.packages("Metbrewer")
install.packages("MetBrewer")
library(tidyverse)
library(ggpubr)
library(multcompView)
library(hrbrthemes)
library(rworldmap)
library(maps)
library(rnaturalearth)
library(maptools)
library(rgeos)
library(qwraps2)
library(afex)
library(Hmisc)
library(lme4)
library(nlme)
library(multcomp)
library(emmeans)
library(coxme)
library(knitr)
library(sf)
library(rnaturalearthdata)
library(cowplot)
library(googleway)
library(ggrepel)
library(ggspatial)
library(DT)
library(data.table)
library(meta)
library(metafor)
library(survival)
library(survminer)
library(MetBrewer)
## Need to run this in the background
myColors <- met.brewer("Johnson", 9)
names(myColors) <- as.factor(c("AK", "GI", "KA", "MA", "MU", "RE", "UM", "VA", "YE"))
colScale <- scale_colour_manual(name = "Population", values = myColors)
droseu_theme <- theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black",),  axis.title.x = element_text(size = 16), axis.text.x = element_text(size = 16),axis.text.y = element_text(size = 16),axis.title.y = element_text(size = 16), colScale)
droseu <- readRDS("Data/droseu_master_list_2022-04-05.rds")
lmers_anova <- readRDS("LinearModelsPop/all_lmers_list_pop_anova.rds")
lmers_tukey <- readRDS("LinearModelsPop/all_lmers_list_pop_tukey.rds")
lmers_sum <- readRDS("LinearModelsPop/all_lmers_list_pop_summary.rds")
table_line_wbatch <- readRDS("DescriptiveStatistics/all_table_Line_wbatch.rds")
table_line_wobatch <- readRDS("DescriptiveStatistics/all_table_Line_wobatch.rds")
table_pop_wbatch <- readRDS("DescriptiveStatistics/all_table_Pop_wbatch.rds")
table_pop_wobatch <- readRDS("DescriptiveStatistics/all_table_Pop_wobatch.rds")
p_Via_Gibert <- ggplot(data = filter(droseu$via, Supervisor.PI == "Gibert"), aes(x=Population_Lat, y=ProportionEggtoAdultSurvival, fill=Batch)) + geom_boxplot(outlier.shape = NA, notch=FALSE) + labs(title="p_Via_Gibert", x="Population", y = "ProportionEggtoAdultSurvival") + ylim(c(min_Via, max_Via)) + droseu_theme
min_Via <- min(droseu$via$ProportionEggtoAdultSurvival)
max_Via <- max(droseu$via$ProportionEggtoAdultSurvival)
p_Via_all <- ggplot(data = droseu$via, aes(x=Population_Lat, y=ProportionEggtoAdultSurvival, fill=Supervisor.PI)) +
geom_boxplot(outlier.shape = NA, notch=FALSE) +
labs(title="p_Via_all", x="Population", y = "DW_micrograms") +
ylim(c(min_Via, max_Via))+ droseu_theme
p_Via_all
p_Via_Gibert <- ggplot(data = filter(droseu$via, Supervisor.PI == "Gibert"), aes(x=Population_Lat, y=ProportionEggtoAdultSurvival, fill=Batch)) + geom_boxplot(outlier.shape = NA, notch=FALSE) + labs(title="p_Via_Gibert", x="Population", y = "ProportionEggtoAdultSurvival") + ylim(c(min_Via, max_Via)) + droseu_theme + colScale
p_Via_Grath <- ggplot(data = filter(droseu$via, Supervisor.PI == "Grath"), aes(x=Population_Lat, y=ProportionEggtoAdultSurvival, fill=Batch)) + geom_boxplot(outlier.shape = NA, notch=FALSE) + labs(title="p_Via_Grath", x="Population", y = "ProportionEggtoAdultSurvival")+ ylim(c(min_Via, max_Via))+ droseu_theme + colScale
p_Via_Grath
droseu <- readRDS("Data/droseu_master_list_2022-04-05.rds")
lmers_anova <- readRDS("LinearModelsPop/all_lmers_list_pop_anova.rds")
lmers_tukey <- readRDS("LinearModelsPop/all_lmers_list_pop_tukey.rds")
lmers_sum <- readRDS("LinearModelsPop/all_lmers_list_pop_summary.rds")
table_line_wbatch <- readRDS("DescriptiveStatistics/all_table_Line_wbatch.rds")
table_line_wobatch <- readRDS("DescriptiveStatistics/all_table_Line_wobatch.rds")
table_pop_wbatch <- readRDS("DescriptiveStatistics/all_table_Pop_wbatch.rds")
table_pop_wobatch <- readRDS("DescriptiveStatistics/all_table_Pop_wobatch.rds")
coxme_anova <- readRDS("SurvivalAnalyses/all_coxmes_list_pop_anova.rds")
coxme_sum <- readRDS("SurvivalAnalyses/all_coxmes_list_pop_summary.rds")
