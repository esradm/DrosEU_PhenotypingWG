}
co
co <- list()
for (j in 1:length(e)) {
if (ncol(e[[j]]) == 5) {
co[[j]] <- cor_test(e[[j]], -c(Sex, Population, Trait))
} else {
co[[j]] <- cor_mat(e[[j]], -c(Sex, Population, Trait)) %>% cor_gather()
}
co[[j]] <- filter(co[[j]], var1 != var2) %>%
rename(Lab1 = var1, Lab2 = var2, R = cor, P = p) %>%
mutate(Sex = unique(e[[j]]$Sex),
Trait = unique(e[[j]]$Trait)) %>%
dplyr::select(Trait, Sex, Lab1, Lab2, R, P)
}
co
co <- list()
for (j in 1:length(e)) {
if (ncol(e[[j]]) == 5) {
co[[j]] <- cor_test(e[[j]], -c(Sex, Population, Trait))
} else {
co[[j]] <- cor_mat(e[[j]], -c(Sex, Population, Trait)) %>% cor_gather()
}
co[[j]] <- filter(co[[j]], var1 != var2) %>%
rename(Lab1 = var1, Lab2 = var2, R = cor, P = p) %>%
mutate(Sex = unique(e[[j]]$Sex),
Trait = unique(e[[j]]$Trait)) %>%
dplyr::select(Trait, Sex, Lab1, Lab2, R, P)
}
bind_rows(co)
f <- estimates[14]
e <- readRDS(f) %>%
dplyr::select(Trait, Sex, Population, Lab, Estimate) %>%
pivot_wider(names_from = c("Lab"), values_from = Estimate) %>%
group_split(Sex)
co <- list()
for (j in 1:length(e)) {
if (ncol(e[[j]]) == 5) {
co[[j]] <- cor_test(e[[j]], -c(Sex, Population, Trait))
} else {
co[[j]] <- cor_mat(e[[j]], -c(Sex, Population, Trait)) %>% cor_gather()
}
co[[j]] <- filter(co[[j]], var1 != var2) %>%
rename(Lab1 = var1, Lab2 = var2, R = cor, P = p) %>%
mutate(Sex = unique(e[[j]]$Sex),
Trait = unique(e[[j]]$Trait)) %>%
dplyr::select(Trait, Sex, Lab1, Lab2, R, P)
}
bind_rows(co)
cor_spearman <- list()
for (i in 1:length(estimates)) {
# get data in and reformat
f <- estimates[i]
e <- readRDS(f) %>%
dplyr::select(Trait, Sex, Population, Lab, Estimate) %>%
pivot_wider(names_from = c("Lab"), values_from = Estimate) %>%
group_split(Sex)
# get correlations
co <- list()
for (j in 1:length(e)) {
if (ncol(e[[j]]) == 5) {
co[[j]] <- cor_test(e[[j]], -c(Sex, Population, Trait))
} else {
co[[j]] <- cor_mat(e[[j]], -c(Sex, Population, Trait)) %>% cor_gather()
}
co[[j]] <- filter(co[[j]], var1 != var2) %>%
rename(Lab1 = var1, Lab2 = var2, R = cor, P = p) %>%
mutate(Sex = unique(e[[j]]$Sex),
Trait = unique(e[[j]]$Trait)) %>%
dplyr::select(Trait, Sex, Lab1, Lab2, R, P)
}
cor_spearman[[i]] <- bind_rows(co)
}
i
estimates
e
f <- estimates[i]
e <- readRDS(f) %>%
dplyr::select(Trait, Sex, Population, Lab, Estimate) %>%
pivot_wider(names_from = c("Lab"), values_from = Estimate) %>%
group_split(Trait, Sex)
f
e
!unique(e[[j]]$Trait) %in% c("DT_P")
j = 2
!unique(e[[j]]$Trait) %in% c("DT_P")
estimates <- list.files(path = "LinearModelsPop", recursive = T, full.names = T, pattern = "pop_model_estimates.rds")
cor_spearman <- list()
for (i in 1:length(estimates)) {
# get data in and reformat
f <- estimates[i]
e <- readRDS(f) %>%
dplyr::select(Trait, Sex, Population, Lab, Estimate) %>%
pivot_wider(names_from = c("Lab"), values_from = Estimate) %>%
group_split(Trait, Sex)
# get correlations
co <- list()
for (j in 1:length(e)) {
if (!unique(e[[j]]$Trait) %in% c("DT_P")) {
if (ncol(e[[j]]) == 5) {
co[[j]] <- cor_test(e[[j]], -c(Sex, Population, Trait))
} else {
co[[j]] <- cor_mat(e[[j]], -c(Sex, Population, Trait)) %>% cor_gather()
}
co[[j]] <- filter(co[[j]], var1 != var2) %>%
rename(Lab1 = var1, Lab2 = var2, R = cor, P = p) %>%
mutate(Sex = unique(e[[j]]$Sex),
Trait = unique(e[[j]]$Trait)) %>%
dplyr::select(Trait, Sex, Lab1, Lab2, R, P)
}
}
cor_spearman[[i]] <- bind_rows(co)
}
co
e
estimates <- list.files(path = "LinearModelsPop", recursive = T, full.names = T, pattern = "pop_model_estimates.rds")
estimates <- estimates[-grep("la"), names(estimates)]
grep("la", names(estimates)
estimates <- list.files(path = "LinearModelsPop", recursive = T, full.names = T, pattern = "pop_model_estimates.rds")
estimates <- estimates[-grep("la", names(estimates))]
estimates <- list.files(path = "LinearModelsPop", recursive = T, full.names = T, pattern = "pop_model_estimates.rds")
estimates <- estimates[-grep("la", names(estimates))]
estimates
estimates <- list.files(path = "LinearModelsPop", recursive = T, full.names = T, pattern = "pop_model_estimates.rds")
estimates
estimates <- list.files(path = "LinearModelsPop", recursive = T, full.names = T, pattern = "pop_model_estimates.rds")
estimates <- estimates[-grep("LA_lmers", estimates)]
estimates
estimates <- list.files(path = "LinearModelsPop", recursive = T, full.names = T, pattern = "pop_model_estimates.rds")
estimates <- estimates[-grep("LA_lmers", estimates)]
cor_spearman <- list()
for (i in 1:length(estimates)) {
# get data in and reformat
f <- estimates[i]
e <- readRDS(f) %>%
dplyr::select(Trait, Sex, Population, Lab, Estimate) %>%
pivot_wider(names_from = c("Lab"), values_from = Estimate) %>%
group_split(Trait, Sex)
# get correlations
co <- list()
for (j in 1:length(e)) {
if (!unique(e[[j]]$Trait) %in% c("DT_P")) {
if (ncol(e[[j]]) == 5) {
co[[j]] <- cor_test(e[[j]], -c(Sex, Population, Trait))
} else {
co[[j]] <- cor_mat(e[[j]], -c(Sex, Population, Trait)) %>% cor_gather()
}
co[[j]] <- filter(co[[j]], var1 != var2) %>%
rename(Lab1 = var1, Lab2 = var2, R = cor, P = p) %>%
mutate(Sex = unique(e[[j]]$Sex),
Trait = unique(e[[j]]$Trait)) %>%
dplyr::select(Trait, Sex, Lab1, Lab2, R, P)
}
}
cor_spearman[[i]] <- bind_rows(co)
}
e
all(is.na(e[[2]]))
!all(is.na(e[[2]]))
select(e[[2]], where(all(is.na())
)
)
select(e[[2]], where(all(is.na())))
select(e[[2]], where(!all(is.na())))
is.na(e[[2]]$Schmidt)
all(is.na(e[[2]]$Schmidt))
all(is.na(e[[2]]$Ritchie))
select(e[[2]], where(!all(is.na())))
apply((e[[2]], 2, function(x) all(is.na(x)))
apply(e[[2]], 2, function(x) all(is.na(x)))
apply(e[[2]], 2, function(x) all(is.na(x))) == TRUE
!apply(e[[2]], 2, function(x) all(is.na(x)))
class(!apply(e[[2]], 2, function(x) all(is.na(x))))
e
e
cols_ok <- !apply(e[[j]], 2, function(x) all(is.na(x)))
j
filter(e[[j]], cols_ok)
e[[j]]
cols_ok
unlist(cols_ok)
names(cols_ok)
dplyr::select(e[[j]], cols_ok)
dplyr::select(e[[j]], as.character(cols_ok))
names(cols_ok)[cols_ok]
cols_ok <- !apply(e[[j]], 2, function(x) all(is.na(x)))
dplyr::select(e[[j]], names(cols_ok)[cols_ok])
estimates <- list.files(path = "LinearModelsPop", recursive = T, full.names = T, pattern = "pop_model_estimates.rds")
estimates <- estimates[-grep("LA_lmers", estimates)]
cor_spearman <- list()
for (i in 1:length(estimates)) {
# get data in and reformat
f <- estimates[i]
e <- readRDS(f) %>%
dplyr::select(Trait, Sex, Population, Lab, Estimate) %>%
pivot_wider(names_from = c("Lab"), values_from = Estimate) %>%
group_split(Trait, Sex)
# get correlations
co <- list()
for (j in 1:length(e)) {
cols_ok <- !apply(e[[j]], 2, function(x) all(is.na(x)))
e[[j]] <- dplyr::select(e[[j]], names(cols_ok)[cols_ok])
if (ncol(e[[j]]) > 4) {
if (ncol(e[[j]]) == 5) {
co[[j]] <- cor_test(e[[j]], -c(Sex, Population, Trait))
} else {
co[[j]] <- cor_mat(e[[j]], -c(Sex, Population, Trait)) %>% cor_gather()
}
co[[j]] <- filter(co[[j]], var1 != var2) %>%
rename(Lab1 = var1, Lab2 = var2, R = cor, P = p) %>%
mutate(Sex = unique(e[[j]]$Sex),
Trait = unique(e[[j]]$Trait)) %>%
dplyr::select(Trait, Sex, Lab1, Lab2, R, P)
}
}
cor_spearman[[i]] <- bind_rows(co)
}
e
j
ncol(e[[j]]) > 4
cols_ok
dplyr::select(e[[j]], names(cols_ok)[cols_ok])
e[[j]] <- dplyr::select(e[[j]], names(cols_ok)[cols_ok])
e[[j]]
cor_spearman <- list()
for (i in 1:length(estimates)) {
# get data in and reformat
f <- estimates[i]
e <- readRDS(f) %>%
dplyr::select(Trait, Sex, Population, Lab, Estimate) %>%
pivot_wider(names_from = c("Lab"), values_from = Estimate) %>%
group_split(Trait, Sex)
# get correlations
co <- list()
for (j in 1:length(e)) {
cols_ok <- !apply(e[[j]], 2, function(x) all(is.na(x)))
e_sub <- dplyr::select(e[[j]], names(cols_ok)[cols_ok])
if (ncol(e_sub) > 4) {
if (ncol(e_sub) == 5) {
co[[j]] <- cor_test(e_sub, -c(Sex, Population, Trait))
} else {
co[[j]] <- cor_mat(e_sub, -c(Sex, Population, Trait)) %>% cor_gather()
}
co[[j]] <- filter(co[[j]], var1 != var2) %>%
rename(Lab1 = var1, Lab2 = var2, R = cor, P = p) %>%
mutate(Sex = unique(e_sub$Sex),
Trait = unique(e_sub$Trait)) %>%
dplyr::select(Trait, Sex, Lab1, Lab2, R, P)
}
}
cor_spearman[[i]] <- bind_rows(co)
}
cor_spearman
cor_spearman <- bind_rows(cor_spearman)
cor_spearman
print(cor_spearman, 245)
print(cor_spearman, n = 245)
estimates <- list.files(path = "LinearModelsPop", recursive = T, full.names = T, pattern = "pop_model_estimates.rds")
estimates <- estimates[-grep("LA_lmers", estimates)]
estimates <- estimates[-grep("Dia_lmers", estimates)]
cor_spearman <- list()
for (i in 1:length(estimates)) {
# get data in and reformat
f <- estimates[i]
e <- readRDS(f) %>%
dplyr::select(Trait, Sex, Population, Lab, Estimate) %>%
pivot_wider(names_from = c("Lab"), values_from = Estimate) %>%
group_split(Trait, Sex)
# get correlations
co <- list()
for (j in 1:length(e)) {
cols_ok <- !apply(e[[j]], 2, function(x) all(is.na(x)))
e_sub <- dplyr::select(e[[j]], names(cols_ok)[cols_ok])
if (ncol(e_sub) > 4) {
if (ncol(e_sub) == 5) {
co[[j]] <- cor_test(e_sub, -c(Sex, Population, Trait))
} else {
co[[j]] <- cor_mat(e_sub, -c(Sex, Population, Trait)) %>% cor_gather()
}
co[[j]] <- filter(co[[j]], var1 != var2) %>%
rename(Lab1 = var1, Lab2 = var2, R = cor, P = p) %>%
mutate(Sex = unique(e_sub$Sex),
Trait = unique(e_sub$Trait)) %>%
dplyr::select(Trait, Sex, Lab1, Lab2, R, P)
}
}
cor_spearman[[i]] <- bind_rows(co)
}
cor_spearman <- bind_rows(cor_spearman)
print(cor_spearman, n = 245)
?cor_gather()
cor_mat(e_sub, -c(Sex, Population, Trait))
e_sub
e
l <- c("Onder", "Posnien", "Ritchie", "StamenkovicRadak")
l
crossing(l, l)
co
l1 <- c("Onder", "Posnien", "Ritchie")
l2 <- c("Posnien", "Ritchie", "StamenkovicRadak")
crossing(l1, l2)
l1 <- c("Onder", "Posnien", "Ritchie"co[[j]] )
co[[j]]
co[[j]] %>% mutate(Labs = sort(c(Lab1, Lab2)))
for (r in 1:nrow(co[[j]])) {co[[j]][r, 3:4] }
for (r in 1:nrow(co[[j]])) { print(co[[j]][r, 3:4]) }
for (r in 1:nrow(co[[j]])) { unlist(print(co[[j]][r, 3:4])) }
for (r in 1:nrow(co[[j]])) { sort(unlist(print(co[[j]][r, 3:4]))) }
sort(unlist(print(co[[j]][r, 3:4]))
)
sort(unlist(print(co[[j]][1, 3:4]))
)
sort(unlist(print(co[[j]][1, 3:4])))
sort(unlist(print(co[[j]][2, 3:4])))
sort(unlist(print(co[[j]][10, 3:4])))
sort(unlist(print(co[[j]][3, 3:4])))
co[[j]][3, 3:4]))) %>% unlist %>% sort %>% paste0()
co[[j]][3, 3:4] %>% unlist %>% sort %>% paste0()
co[[j]][3, 3:4] %>% unlist %>% sort
co[[j]][3, 3:4] %>% unlist %>% sort %>% paste0(collapse = "_")
co[[j]][3, 3:4] %>% unlist %>% sort %>% paste(collapse = "_")
cor_spearman
co[[j]]
for (r in 1:nrow(co[[j]])) {
co[[j]]$Labs[r] <- co[[j]][3, c("Lab1", "Lab2")] %>%
unlist %>% sort %>% paste(collapse = "_")
}
co[[j]]$Labs <- "NA"
for (r in 1:nrow(co[[j]])) {
co[[j]]$Labs[r] <- co[[j]][3, c("Lab1", "Lab2")] %>%
unlist %>% sort %>% paste(collapse = "_")
}
co[[j]]
co[[j]]$Labs <- "NA"
for (r in 1:nrow(co[[j]])) {
co[[j]]$Labs[r] <- co[[j]][r, c("Lab1", "Lab2")] %>%
unlist %>% sort %>% paste(collapse = "_")
}
co[[j]]
group_by(co[[j]], Trait, Sex, Labs)
group_by(co[[j]], Trait, Sex, Labs) %>%
my_data %>% distinct(Labs, .keep_all = TRUE)
group_by(co[[j]], Trait, Sex, Labs) %>%
distinct(Labs, .keep_all = TRUE)
###############################################################
######################  LAB CORRELATIONS ######################
###############################################################
##### clean workspace
rm(list = ls())
##### libraries
library(tidyverse)
library(rstatix)
##### set working directory
setwd("~/Work/UNIFR/GitHub/DrosEU_PhenotypingWG/")
##### source functions
source("Functions/lab_correlations_functions.R")
##### create output directory
cor_dir <- "LabCorrelations"
dir.create(cor_dir, showWarnings = F)
##### plots
estimates <- list.files(path = "LinearModelsPop", recursive = T, full.names = T, pattern = "pop_model_estimates.rds")
for (i in 1:length(estimates)){
f <- estimates[i]
e <- readRDS(f)
if (length(unique(e$Lab)) > 1) {
d_out <- sub("LinearModelsPop", cor_dir, f)
d_out <- str_match(d_out, '(.*[^/]+)(?:/[^/]+){1}$')[,2]
dir.create(d_out, showWarnings = F)
ts <- group_split(e, Trait, Sex)
for (j in 1:length(ts)){
if (length(unique(ts[[j]]$Lab)) > 1) {
ts_out_pdf <- file.path(d_out, paste0(unique(ts[[j]]$Trait), "_", unique(ts[[j]]$Sex), "_", unique(ts[[j]]$Model), "_lab_correlations.pdf"))
pdf(ts_out_pdf)
scatterPlotMatrix(filter(ts[[j]], Trait == unique(ts[[j]]$Trait), Sex == unique(ts[[j]]$Sex)))
dev.off()
ts_out_png <- sub("pdf", "png", ts_out_pdf)
png(ts_out_png, 2100, 2100, res = 300)
scatterPlotMatrix(filter(ts[[j]], Trait == unique(ts[[j]]$Trait), Sex == unique(ts[[j]]$Sex)))
dev.off()
}
}
}
}
######
estimates <- list.files(path = "LinearModelsPop", recursive = T, full.names = T, pattern = "pop_model_estimates.rds")
estimates <- estimates[-grep("LA_lmers", estimates)]
estimates <- estimates[-grep("Dia_lmers", estimates)]
cor_spearman <- list()
for (i in 1:length(estimates)) {
# get data in and reformat
f <- estimates[i]
e <- readRDS(f) %>%
dplyr::select(Trait, Sex, Population, Lab, Estimate) %>%
pivot_wider(names_from = c("Lab"), values_from = Estimate) %>%
group_split(Trait, Sex)
# get correlations
co <- list()
for (j in 1:length(e)) {
cols_ok <- !apply(e[[j]], 2, function(x) all(is.na(x)))
e_sub <- dplyr::select(e[[j]], names(cols_ok)[cols_ok])
if (ncol(e_sub) > 4) {
if (ncol(e_sub) == 5) {
co[[j]] <- cor_test(e_sub, -c(Sex, Population, Trait))
} else {
co[[j]] <- cor_mat(e_sub, -c(Sex, Population, Trait)) %>% cor_gather()
}
co[[j]] <- filter(co[[j]], var1 != var2) %>%
rename(Lab1 = var1, Lab2 = var2, R = cor, P = p) %>%
mutate(Sex = unique(e_sub$Sex),
Trait = unique(e_sub$Trait)) %>%
dplyr::select(Trait, Sex, Lab1, Lab2, R, P)
co[[j]]$Labs <- "NA"
for (r in 1:nrow(co[[j]])) {
co[[j]]$Labs[r] <- co[[j]][r, c("Lab1", "Lab2")] %>%
unlist %>% sort %>% paste(collapse = "_")
}
co[[j]] <- group_by(co[[j]], Trait, Sex, Labs) %>%
distinct(Labs, .keep_all = TRUE)
}
}
cor_spearman[[i]] <- bind_rows(co)
}
cor_spearman <- bind_rows(cor_spearman)
cor_spearman
cor_spearman <- list()
for (i in 1:length(estimates)) {
# get data in and reformat
f <- estimates[i]
e <- readRDS(f) %>%
dplyr::select(Trait, Sex, Population, Lab, Estimate) %>%
pivot_wider(names_from = c("Lab"), values_from = Estimate) %>%
group_split(Trait, Sex)
# get correlations
co <- list()
for (j in 1:length(e)) {
cols_ok <- !apply(e[[j]], 2, function(x) all(is.na(x)))
e_sub <- dplyr::select(e[[j]], names(cols_ok)[cols_ok])
if (ncol(e_sub) > 4) {
if (ncol(e_sub) == 5) {
co[[j]] <- cor_test(e_sub, -c(Sex, Population, Trait))
} else {
co[[j]] <- cor_mat(e_sub, -c(Sex, Population, Trait)) %>% cor_gather()
}
co[[j]] <- filter(co[[j]], var1 != var2) %>%
rename(Lab1 = var1, Lab2 = var2, R = cor, P = p) %>%
mutate(Sex = unique(e_sub$Sex),
Trait = unique(e_sub$Trait)) %>%
dplyr::select(Trait, Sex, Lab1, Lab2, R, P)
co[[j]]$Labs <- "NA"
for (r in 1:nrow(co[[j]])) {
co[[j]]$Labs[r] <- co[[j]][r, c("Lab1", "Lab2")] %>%
unlist %>% sort %>% paste(collapse = "_")
}
co[[j]] <- group_by(co[[j]], Trait, Sex, Labs) %>%
distinct(Labs, .keep_all = TRUE)
}
}
cor_spearman[[i]] <- bind_rows(co)
}
cor_spearman <- bind_rows(cor_spearman) %>%
mutate(Method = "Spearman")
cor_spearman
estimates <- list.files(path = "LinearModelsPop", recursive = T, full.names = T, pattern = "pop_model_estimates.rds")
estimates <- estimates[-grep("LA_lmers", estimates)]
estimates <- estimates[-grep("Dia_lmers", estimates)]
cor_spearman <- list()
for (i in 1:length(estimates)) {
# get data in and reformat
f <- estimates[i]
e <- readRDS(f) %>%
dplyr::select(Trait, Sex, Population, Lab, Estimate) %>%
pivot_wider(names_from = c("Lab"), values_from = Estimate) %>%
group_split(Trait, Sex)
# get correlations
co <- list()
for (j in 1:length(e)) {
cols_ok <- !apply(e[[j]], 2, function(x) all(is.na(x)))
e_sub <- dplyr::select(e[[j]], names(cols_ok)[cols_ok])
if (ncol(e_sub) > 4) {
if (ncol(e_sub) == 5) {
co[[j]] <- cor_test(e_sub, -c(Sex, Population, Trait))
} else {
co[[j]] <- cor_mat(e_sub, -c(Sex, Population, Trait)) %>% cor_gather()
}
co[[j]] <- filter(co[[j]], var1 != var2) %>%
rename(Lab1 = var1, Lab2 = var2, R = cor, P = p) %>%
mutate(Sex = unique(e_sub$Sex),
Trait = unique(e_sub$Trait)) %>%
dplyr::select(Trait, Sex, Lab1, Lab2, R, P)
co[[j]]$Labs <- "NA"
for (r in 1:nrow(co[[j]])) {
co[[j]]$Labs[r] <- co[[j]][r, c("Lab1", "Lab2")] %>%
unlist %>% sort %>% paste(collapse = "_")
}
co[[j]] <- group_by(co[[j]], Trait, Sex, Labs) %>%
distinct(Labs, .keep_all = TRUE)
}
}
cor_spearman[[i]] <- bind_rows(co)
}
cor_spearman <- bind_rows(cor_spearman) %>%
mutate(Method = "Spearman") %>%
Group = paste(Trait, Sex, "_")
bind_rows(cor_spearman) %>%
mutate(Method = "Spearman",
Group = paste(Trait, Sex, "_"))
cor_spearman <- bind_rows(cor_spearman) %>%
mutate(Method = "Spearman",
Group = paste(Trait, Sex))
ggplot(cor_spearman, aes(x = R, y = -log10(P))) +
geom_point() +
facet_wrap(Group ~ .)
